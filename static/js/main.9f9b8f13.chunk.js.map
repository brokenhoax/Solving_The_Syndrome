{"version":3,"sources":["assets/images/banana.jpg","assets/images/code.jpg","assets/images/graph.jpg","assets/images/grid.jpg","assets/images/money.jpg","assets/images/neuron.jpg","assets/images/programmer.jpg","assets/images/tired.jpg","assets/logo.png","components/navbar/Navbar.jsx","mocks/featured.js","mocks/trending.js","components/common/masonryPosts.jsx","components/common/postMasonry.jsx","components/common/postGrid.jsx","components/common/styles.jsx","components/common/tagRow.jsx","pages/blog/home.jsx","assets/headshot.png","pages/blog/contact.jsx","pages/blog/blog.jsx","pages/blog/i-know-kung-fu.jsx","pages/blog/figma-slider.jsx","pages/blog/ready-set-go.jsx","App.js","reportWebVitals.js","index.js","assets/images/slider_handle.png","assets/images/kung-foo.jpg","assets/images sync /^/.//.*$"],"names":["Navbar","useState","toggle","setNavvy","setNavbarstatus","className","src","logo","alt","title","path","map","link","index","to","onClick","icon","faTimes","size","faMinus","featured","date","moment","format","categories","image","trending","MasonaryPost","post","imageBackground","tagsOntop","backgroundPosition","borderRadius","padding","backgroundImage","require","default","style","href","TagRow","tags","PostMasonry","posts","columns","tagsOnTop","gridTemplateColumns","key","PostGrid","pageSize","setPageSize","current","setCurrent","paginatedPosts","useMemo","lastIndex","firstIndex","slice","simple","showSizeChanger","onShowSizeChange","total","length","defaultCurrent","onChange","categoryColors","Vue","React","JavaScript","Cloud","console","log","tag","backgroundColor","toUpperCase","mergeStyles","config","forEach","author","description","recentPosts","lastFeatured","pop","Home","Contact","useEffect","script","document","createElement","async","body","appendChild","headshot","Blog","minutes","seconds","mugs","tagline","Array","elementInArray","i","IKnowKungFoo","kungfoo","FigmaSlider","setToggle","class","id","width","height","viewBox","fill","xmlns","x1","y1","x2","y2","stroke","d","cx","cy","r","x","y","rx","prevCheck","slider_handle","ReadySetGo","App","exact","component","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"mappings":"kJAAA,OAAe,cAA0B,oC,iCCAzC,OAAe,cAA0B,kC,iCCAzC,OAAe,cAA0B,mC,iCCAzC,OAAe,cAA0B,kC,iCCAzC,OAAe,cAA0B,mC,iCCAzC,OAAe,cAA0B,oC,iCCAzC,OAAe,cAA0B,wC,iCCAzC,OAAe,cAA0B,mC,4LCA1B,MAA0B,iC,OCmH1BA,MAzGf,WACE,MAA2BC,oBAAS,GAApC,mBAAOC,EAAP,KAAeC,EAAf,KAqBA,SAASC,IAELD,GADED,GAON,OAAIA,EAEA,qBAAKG,UAAU,0DAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,mCAAf,UAEE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,WAAWC,IAAKC,EAAMC,IAAI,WAG3C,qBAAKH,UAAU,4DAEf,sBAAKA,UAAU,uCAAf,UACGF,GACC,oBAAIE,UAAU,iCAAd,SAzCG,CACf,CACEI,MAAO,OACPC,KAAM,SAER,CACED,MAAO,UACPC,KAAM,aAmCgBC,KAAI,SAACC,EAAMC,GAAP,OACZ,qBAAIR,UAAU,eAAd,UACGF,IAAaS,EAAKF,MACjB,cAAC,IAAD,CACEI,GAAIF,EAAKF,KACTL,UAAU,4FAFZ,SAIGO,EAAKH,QAGTN,IAAaS,EAAKF,MACjB,cAAC,IAAD,CACEI,GAAIF,EAAKF,KACTL,UAAU,oQAFZ,SAIGO,EAAKH,UAdsBI,QAqBxC,wBACER,UAAU,0BACVU,QAASX,EAFX,SAIE,cAAC,IAAD,CAAiBY,KAAMC,IAASC,KAAK,mBAS9ChB,OAAL,EAEI,qBAAKG,UAAU,0DAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,+CAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,WAAWC,IAAKC,EAAMC,IAAI,WAE3C,qBAAKH,UAAU,2DAAf,kCAGA,qBAAKA,UAAU,yBAAf,SACE,wBACEA,UAAU,0BACVU,QAASX,EAFX,SAIE,cAAC,IAAD,CAAiBY,KAAMG,IAASD,KAAK,mB,yBCxG1CE,EAAW,CACpB,CACEX,MAAO,mCACPY,KAAMC,MAASC,OAAO,iBACtBC,WAAY,CAAC,gBACbZ,KAAM,IACNa,MAAO,aAET,CACEhB,MAAO,kBACPY,KAAMC,MAASC,OAAO,iBACtBC,WAAY,CAAC,QAAS,cACtBZ,KAAM,IACNa,MAAO,aAET,CACEhB,MAAO,oCACPY,KAAMC,MAASC,OAAO,iBACtBC,WAAY,CAAC,gBACbZ,KAAM,IACNa,MAAO,kBAET,CACEhB,MAAO,sCACPY,KAAMC,MAASC,OAAO,iBACtBC,WAAY,CAAC,uBACbZ,KAAM,IACNa,MAAO,cAET,CACEhB,MAAO,4BACPY,KAAMC,MAASC,OAAO,iBACtBC,WAAY,CAAC,gBACbZ,KAAM,IACNa,MAAO,aAET,CACEhB,MAAO,wBACPY,KAAMC,MAASC,OAAO,iBACtBC,WAAY,CAAC,gBACbZ,KAAM,IACNa,MAAO,cCzCAC,EAAW,CACpB,CACEjB,MAAO,mBACPY,KAAMC,MAASC,OAAO,iBACtBC,WAAY,CAAC,gBACbZ,KAAM,IACNa,MAAO,aAET,CACEhB,MAAO,uCACPY,KAAMC,MAASC,OAAO,iBACtBC,WAAY,CAAC,QAAS,cACtBZ,KAAM,IACNa,MAAO,aAET,CACEhB,MAAO,wCACPY,KAAMC,MAASC,OAAO,iBACtBC,WAAY,CAAC,gBACbZ,KAAM,IACNa,MAAO,YAET,CACEhB,MAAO,wCACPY,KAAMC,MAASC,OAAO,iBACtBC,WAAY,CAAC,uBACbZ,KAAM,IACNa,MAAO,cAET,CACEhB,MAAO,4BACPY,KAAMC,MAASC,OAAO,iBACtBC,WAAY,CAAC,gBACbZ,KAAM,IACNa,MAAO,a,cChCI,SAASE,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,KAC/BC,GADkD,EAAbC,UACnB,CACtBC,mBAAmB,WACnBC,aAAa,OACbC,QAAS,MACTC,gBAAgB,QAAD,OACbC,MAAQ,YAAuBP,EAAKH,QAASW,QADhC,QAKXC,EAAK,uCAAQR,GAAoBD,EAAKS,OAAUT,EAAKS,OAE3D,OACE,sBAAMhC,UAAU,+BAA+BgC,MAAOA,EAAtD,SACE,mBAAGC,KAAMV,EAAKhB,KAAMP,UAAU,kCAA9B,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,8CAAd,SACGuB,EAAKnB,QAER,sBAAMJ,UAAU,6BAAhB,SAA8CuB,EAAKP,OACnD,cAACkB,EAAD,CAAQC,KAAMZ,EAAKJ,oB,WCNdiB,EAdK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAC/BP,EAAQ,CACZQ,oBAAoB,UAAD,OAAYF,EAAZ,2BAGrB,OACE,yBAAStC,UAAU,eAAegC,MAAOA,EAAzC,SACGK,EAAM/B,KAAI,SAACiB,EAAMf,GAAP,OACT,cAAC,EAAD,CAAmBe,OAAMf,QAAO+B,YAAWE,IAAKjC,U,gBCNzC,SAASkC,EAAT,GAA8B,IAAVL,EAAS,EAATA,MACjC,EAAgCzC,mBAAS,GAAzC,mBAAO+C,EAAP,KAAiBC,EAAjB,KACA,EAA8BhD,mBAAS,GAAvC,mBAAOiD,EAAP,KAAgBC,EAAhB,KAEMC,EAAiBC,mBAAQ,WAC7B,IAAMC,EAAYJ,EAAUF,EACtBO,EAAaD,EAAYL,EAE/B,OAAOP,EAAMc,MAAMD,EAAYD,KAC9B,CAACZ,EAAOQ,EAASF,IAEpB,OACE,oCACGI,EAAezC,KAAI,SAACiB,EAAMf,GAAP,OAClB,sBAAKR,UAAU,sBAAf,UACE,oBAAIA,UAAU,2DAAd,SACGuB,EAAKnB,QAER,sBAAMJ,UAAU,6BAAhB,SAA8CuB,EAAKP,OACnD,iCACE,eAAC,IAAD,CAAMP,GAAIc,EAAKhB,KAAf,UACE,cAAC2B,EAAD,CAAQC,KAAMZ,EAAKJ,aACnB,qBACElB,IAAK6B,MAAQ,YAAuBP,EAAKH,QAASW,QAClD5B,IAAKoB,EAAKH,MACVpB,UAAU,0CAMpB,cAAC,IAAD,CACEoD,QAAM,EACNC,iBAAe,EACfC,iBAAkBV,EAClBD,SAAUA,EACVY,MAAOlB,EAAMmB,OACbC,eAAgBZ,EAChBa,SAAUZ,EACV9C,UAAU,uCC7ClB,IAAM2D,EAAiB,CACrB,eAAgB,iBAChB,YAAa,iBACb,sBAAuB,iBACvBC,IAAK,iBACLC,MAAO,kBACPC,WAAY,kBACZC,MAAO,kBCJM,SAAS7B,EAAT,GAA2B,IAATC,EAAQ,EAARA,KAM/B,OAJE6B,QAAQC,IAAI9B,GAKZ,qBAAKnC,UAAU,aAAf,SACGmC,EAAK7B,KAAI,SAAC4D,EAAK1D,GAAN,OACR,sBAEER,UAAU,0CACVgC,MAAO,CAAEmC,gBAAiBR,EAAeO,IAH3C,SAKGA,EAAIE,eAJA5D,Q,WCwBT6D,EAAc,SAAUhC,EAAOiC,GACnCjC,EAAMkC,SAAQ,SAAChD,EAAMf,GAEnBe,EAAKiD,OAAS,eACdjD,EAAKkD,YAAc,4DAKjBC,EAAW,sBAAOrD,GAAP,YAAoBN,GAApB,YAAiCA,IAElDsD,EAAYtD,GACZsD,EAAYhD,GAGZ,IAAMsD,EAAe5D,EAAS6D,MAEf,SAASC,IACtB,OACE,iCACE,yBAAS7E,UAAU,sBAAnB,SACE,8BACE,0BAASA,UAAU,sBAAnB,UACE,cAAC,EAAD,CAAauB,KAAMoD,EAAcpC,WAAW,EAAMD,QAAS,IAC3D,cAAC,EAAD,CAAaD,MAAOtB,EAAUwB,WAAW,EAAMD,QAAS,WAI9D,yBAAStC,UAAU,sBAAnB,SACE,8BACE,yBAASA,UAAU,IAAnB,SACE,cAAC0C,EAAD,CAAUL,MAAOqC,aCpEd,UAA0B,qCCqF1BI,G,MAhFC,WAQd,OAPAC,qBAAU,WACR,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAO/E,IACL,oGACF+E,EAAOG,OAAQ,EACfF,SAASG,KAAKC,YAAYL,KACzB,IAED,yBAAShF,UAAU,kDAAnB,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,sCAAd,sBACA,oBAAIA,UAAU,sBAAd,4BACA,mBAAGA,UAAU,0BAAb,gsBAaA,mBAAGA,UAAU,0BAAb,6bAQA,mBAAGA,UAAU,0BAAb,mkBAWA,mBAAGA,UAAU,0BAAb,udASA,sBAAKA,UAAU,uCAAf,UACE,qBAAKC,IAAKqF,EAAUtF,UAAU,oBAAoBG,IAAI,SAEtD,qBAAKH,UAAU,+BAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,qBAAf,0BACA,mBACEiC,KAAK,2CACLjC,UAAU,qBAFZ,sBAMA,mBACEiC,KAAK,iCACLjC,UAAU,qBAFZ,mCCiCCuF,EAlGF,WA0DX,OAPAR,qBAAU,WACR,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAO/E,IACL,oGACF+E,EAAOG,OAAQ,EACfF,SAASG,KAAKC,YAAYL,KACzB,IAED,yBAAShF,UAAU,yCAAnB,SACE,sBAAKA,UAAU,8CAAf,UACE,sBAAKA,UAAU,4CAAf,UACE,qBAAKC,IAAKqF,EAAUtF,UAAU,oBAAoBG,IAAI,SACtD,sBAAKH,UAAU,+BAAf,UACE,+CACA,qBAAKA,UAAU,sBAAf,+BAGJ,+BAnEQ,CACZ,CACEI,MAAO,kBACPY,KAAM,WACNwC,OAAQ,CACNgC,QAAS,IACTC,QAAS,MAEX9E,KAAM,iBACN+E,KAAM,EACNC,QAAS,sBACTtF,KAAM,yBAER,CACED,MAAO,eACPY,KAAM,YACNwC,OAAQ,CACNgC,QAAS,KACTC,QAAS,MAEX9E,KAAM,iBACN+E,KAAM,EACNC,QAAS,4BACTtF,KAAM,sBAER,CACED,MAAO,eACPY,KAAM,WACNwC,OAAQ,CACNgC,QAAS,KACTC,QAAS,MAEX9E,KAAM,iBACN+E,KAAM,EACNC,QAAS,6BACTtF,KAAM,uBAiCKC,KAAI,SAACiB,EAAMf,GAAP,OACT,qBAAIR,UAAU,gBAAd,UACE,cAAC,IAAD,CACES,GAAIc,EAAKlB,KACTL,UAAU,uDAFZ,SAIGuB,EAAKnB,QAER,sBAAKJ,UAAU,YAAf,UACE,sBAAKA,UAAU,oBAAf,UAEE,qBAAKA,UAAU,uBAAf,SAAuCuB,EAAKoE,eArC1D,YAAIC,MADI,IACMtF,KAAI,SAACuF,EAAgBrF,GAAjB,OAChB,sBAAKR,UAAU,GAAf,UACG,IADH,2CAE2C,WALzC8F,MAyCU,mBAAG9F,UAAS,UAAKuB,EAAKZ,KAAV,yBACZ,oBAAGX,UAAU,eAAb,UAA6BuB,EAAKiC,OAAOgC,QAAzC,iBAEF,qBAAKxF,UAAU,sCAAf,SACGuB,EAAKP,YAhBuBR,MAqBrC,gC,QCMKuF,EAlGM,WAQnB,OAPAhB,qBAAU,WACR,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAO/E,IACL,oGACF+E,EAAOG,OAAQ,EACfF,SAASG,KAAKC,YAAYL,KACzB,IAED,yBAAShF,UAAU,mCAAnB,SACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,sCAAd,6BACA,oBAAIA,UAAU,sBAAd,6BACA,mBAAGA,UAAU,gCAAb,qYAQA,qBAAKA,UAAU,6BAAf,SACE,qBACEC,IAAK+F,UACL7F,IAAI,cACJH,UAAU,uBAGd,mBAAGA,UAAU,0BAAb,yYAQA,oBAAGA,UAAU,0BAAb,sCAEE,oBAAGiC,KAAK,yBAAyBjC,UAAU,eAA3C,UACG,IADH,oDAGK,IALP,4aAcA,mBAAGA,UAAU,0BAAb,2WAQA,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,0FAAf,0QAaF,mBAAGA,UAAU,0BAAb,wbASA,mBAAGA,UAAU,0BAAb,iqB,gBCsTOiG,EArYK,WAClB,MAA4BrG,oBAAS,GAArC,mBAAOC,EAAP,KAAeqG,EAAf,KAEAnB,qBAAU,WACR,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAO/E,IACL,oGACF+E,EAAOG,OAAQ,EACfF,SAASG,KAAKC,YAAYL,KACzB,IAIH,OACE,yBAAShF,UAAU,2DAAnB,SACE,sBAAKA,UAAU,4BAAf,UAEE,sBAAKmG,MAAM,YAAX,UACE,oBAAInG,UAAU,iCAAiCoG,GAAG,QAAlD,0BAGA,qBAAKpG,UAAU,sBAAf,4BACA,qBAAKA,UAAU,mCACf,mBAAGA,UAAU,mCAAb,2aAWF,gCACE,oBAAIoG,GAAG,MAAMpG,UAAU,4CAAvB,+BAGA,qBAAIA,UAAU,iEAAd,UACE,6BACE,cAAC,IAAD,CAAUS,GAAG,6CAAb,uCAIF,6BACE,cAAC,IAAD,CAAUA,GAAG,mCAAb,6BAIF,6BACE,cAAC,IAAD,CAAUA,GAAG,gCAAb,0BAEF,6BACE,cAAC,IAAD,CAAUA,GAAG,kCAAb,4BAIF,6BACE,cAAC,IAAD,CAAUA,GAAG,iCAAb,iCAMN,qBAAKT,UAAU,mCAEf,sBAAKA,UAAU,YAAf,UACE,qBAAIoG,GAAG,0BAA0BpG,UAAU,yBAA3C,oCAC0B,IACxB,uBAAMA,UAAU,6BAAhB,UACG,IACD,cAAC,IAAD,CAAUS,GAAG,2BAAb,qBAGJ,qgBAUA,6qBAYA,qBAAKT,UAAU,+CAAf,SACE,sBACEqG,MAAM,MACNC,OAAO,MACPC,QAAQ,cACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,GAAG,KACHC,GAAG,KACHC,GAAG,KACHC,GAAG,KACHC,OAAO,UACP,eAAa,IACb,iBAAe,UAEjB,sBACEC,EAAE,+GACFP,KAAK,YAEP,wBAAQQ,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKV,KAAK,YACpC,wBAAQQ,GAAG,KAAKC,GAAG,KAAKC,EAAE,IAAIV,KAAK,YACnC,sBACEE,GAAG,KACHC,GAAG,KACHC,GAAG,MACHC,GAAG,KACHC,OAAO,UACP,eAAa,IACb,iBAAe,UAEjB,sBACEC,EAAE,gGACFP,KAAK,YAEP,wBAAQQ,GAAG,MAAMC,GAAG,KAAKC,EAAE,KAAKV,KAAK,YACrC,wBAAQQ,GAAG,MAAMC,GAAG,KAAKC,EAAE,IAAIV,KAAK,YACpC,sBACEO,EAAE,6HACFP,KAAK,YAEP,sBACEE,GAAG,KACHC,GAAG,MACHC,GAAG,MACHC,GAAG,MACHC,OAAO,UACP,eAAa,IACb,iBAAe,UAEjB,wBAAQE,GAAG,MAAMC,GAAG,MAAMC,EAAE,KAAKV,KAAK,YACtC,wBAAQQ,GAAG,MAAMC,GAAG,MAAMC,EAAE,IAAIV,KAAK,YACrC,sBACEW,EAAE,MACFC,EAAE,MACFf,MAAM,MACNC,OAAO,MACPe,GAAG,MACHP,OAAO,UACP,mBAAiB,iBAKzB,qBAAK9G,UAAU,mCAEf,sBAAKA,UAAU,0BAAf,UACE,qBAAIoG,GAAG,gBAAgBpG,UAAU,yBAAjC,0BACgB,IACd,uBAAMA,UAAU,6BAAhB,UACG,IACD,cAAC,IAAD,CAAUS,GAAG,2BAAb,qBAGJ,mKAIE,sBAAKT,UAAU,iDAAf,UACGH,GACC,wBAAQG,UAAU,GAAlB,SACE,qBACEU,QAAS,kBAAMwF,GAAU,SAACoB,GAAD,OAAgBA,MACzCtH,UAAU,kBACVC,IAAKsH,UACLpH,IAAI,qBAIRN,GACA,wBAAQG,UAAU,GAAlB,SACE,qBACEU,QAAS,kBAAMwF,GAAU,SAACoB,GAAD,OAAgBA,MACzCtH,UAAU,mBACVC,IAAKsH,UACLpH,IAAI,oBAIV,yBACEO,QAAS,kBAAMwF,GAAU,SAACoB,GAAD,OAAgBA,MACzCtH,UAAU,mCAFZ,UAIE,mBACEA,UAAS,wBAAmBH,EAAS,UAAY,aAEnD,qBAAKG,UAAS,UAAKH,EAAS,UAAY,WAAxC,uEAMN,upBAaF,sBAAKG,UAAU,YAAf,UACE,qBAAIoG,GAAG,aAAapG,UAAU,yBAA9B,uBACa,IACX,uBAAMA,UAAU,6BAAhB,UACG,IACD,cAAC,IAAD,CAAUS,GAAG,2BAAb,qBAGJ,4mBAWA,ycASA,whCAmBF,sBAAKT,UAAU,YAAf,UACE,qBAAIoG,GAAG,eAAepG,UAAU,yBAAhC,yBACe,IACb,uBAAMA,UAAU,6BAAhB,UACG,IACD,cAAC,IAAD,CAAUS,GAAG,2BAAb,qBAGJ,8xBAY4C,OAE5C,gqCAoBF,sBAAKT,UAAU,YAAf,UACE,qBAAIoG,GAAG,cAAcpG,UAAU,yBAA/B,wBACc,IACZ,uBAAMA,UAAU,6BAAhB,UACG,IACD,cAAC,IAAD,CAAUS,GAAG,2BAAb,qBAGJ,guBAaA,iiBAUA,8nBAWA,uqBAWA,8rBAWA,wb,QCjNK+G,EAvKI,WAQjB,OAPAzC,qBAAU,WACR,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAO/E,IACL,qGACF+E,EAAOG,OAAQ,EACfF,SAASG,KAAKC,YAAYL,KACzB,IAED,0BAAShF,UAAU,qDAAnB,UACE,sBAAKA,UAAU,mCAAf,UACE,oBAAIA,UAAU,iCAAd,0BACA,mBAAGA,UAAU,sBAAb,4BACA,qBAAKA,UAAU,mCACf,oBAAGA,UAAU,mCAAb,oCAC0B,IACxB,+BACE,mBACEiC,KAAK,oDACLjC,UAAU,uCAFZ,gCAMM,IATV,wIAaA,qBAAIA,UAAU,2EAAd,UACE,6BACE,cAAC,IAAD,CAAUS,GAAG,8BAAb,+CAIF,6BACE,cAAC,IAAD,CAAUA,GAAG,4BAAb,4CAIF,6BACE,cAAC,IAAD,CAAUA,GAAG,2BAAb,8CAIF,6BACE,cAAC,IAAD,CAAUA,GAAG,0BAAb,8CAIF,6BACE,cAAC,IAAD,CAAUA,GAAG,2BAAb,2CAIF,+BACG,IACD,cAAC,IAAD,CAAUA,GAAG,4BAAb,mEAKJ,qBAAKT,UAAU,mCACf,oBAAIoG,GAAG,WAAWpG,UAAU,8BAA5B,6CAGA,iJAEiD,GAC/C,sBAAMA,UAAU,uCAAhB,SACE,mBAAGiC,KAAK,4BAAR,6BAJJ,kDAQA,oBAAImE,GAAG,SAASpG,UAAU,8BAA1B,0CAGA,6IAGE,sBAAMA,UAAU,uCAAhB,SACE,mBAAGiC,KAAK,yBAAR,0BAJJ,mJASA,oBAAImE,GAAG,QAAQpG,UAAU,8BAAzB,4CAGA,qMAKA,qBAAKA,UAAU,kGAAf,iLASA,oBAAIoG,GAAG,OAAOpG,UAAU,8BAAxB,kDAGA,6CACe,IACb,mBACEiC,KAAK,oDACLjC,UAAU,kCAFZ,8BAFF,mQAW8D,OAE9D,qBAAKA,UAAU,4FAAf,yMAUA,oBAAIoG,GAAG,QAAQpG,UAAU,8BAAzB,yCAGA,oQAMA,qBAAKA,UAAU,4FAAf,0EAMA,oBAAIoG,GAAG,SAASpG,UAAU,8BAA1B,kDAGA,uHAIA,qBAAKA,UAAU,4FAAf,sFAOF,yBAAQA,UAAU,sEAAlB,UACE,qBAAKA,UAAU,UAAf,eAAiC,OAEnC,sBAAKA,UAAU,wCAAf,UACE,qBAAKA,UAAU,UAAf,uCACA,qBAAKA,UAAU,UAAUC,IAAKC,EAAMC,IAAI,gBC7FjCsH,MA1Df,WACE,OACE,cAAC,IAAD,UACE,sBAAKzH,UAAU,2CAAf,UACE,cAAC,EAAD,CAAQA,UAAU,WAClB,qBAAKA,UAAU,OAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,IAAIqH,OAAO,EAAMC,UAAWpC,IACxC,cAAC,IAAD,CACElF,KAAK,QACLqH,OAAO,EACP1H,UAAU,OACV2H,UAAW9C,IAQb,cAAC,IAAD,CACExE,KAAK,QACLqH,OAAO,EACP1H,UAAU,OACV2H,UAAWpC,IAEb,cAAC,IAAD,CACElF,KAAK,qBACLqH,OAAO,EACP1H,UAAU,SACV2H,UAAW1B,IAEb,cAAC,IAAD,CACE5F,KAAK,wBACLqH,OAAO,EACP1H,UAAU,OACV2H,UAAW5B,IAEb,cAAC,IAAD,CACE1F,KAAK,qBACLqH,OAAO,EACP1H,UAAU,OACV2H,UAAWH,IAEb,cAAC,IAAD,CACEnH,KAAK,WACLqH,OAAO,EACP1H,UAAU,UACV2H,UAAW7C,IAEb,cAAC,IAAD,CAAU8C,KAAK,IAAInH,GAAG,oBCtDnBoH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvD,SAASwD,eAAe,SAM1BZ,K,0ECfA,OAAe,cAA0B,2C,gCCAzC,OAAe,cAA0B,sC,wCCAzC,IAAIvH,EAAM,CACT,eAAgB,IAChB,aAAc,IACd,cAAe,IACf,aAAc,IACd,iBAAkB,GAClB,cAAe,IACf,eAAgB,IAChB,mBAAoB,IACpB,sBAAuB,GACvB,cAAe,KAIhB,SAASoI,EAAeC,GACvB,IAAIvC,EAAKwC,EAAsBD,GAC/B,OAAOE,EAAoBzC,GAE5B,SAASwC,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAExI,EAAKqI,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,EAEP,OAAOzI,EAAIqI,GAEZD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAK5I,IAEpBoI,EAAeU,QAAUR,EACzBS,EAAOC,QAAUZ,EACjBA,EAAetC,GAAK,K","file":"static/js/main.9f9b8f13.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banana.77ff416c.jpg\";","export default __webpack_public_path__ + \"static/media/code.b071a8a1.jpg\";","export default __webpack_public_path__ + \"static/media/graph.e21dccb6.jpg\";","export default __webpack_public_path__ + \"static/media/grid.d47fe448.jpg\";","export default __webpack_public_path__ + \"static/media/money.7ae5265a.jpg\";","export default __webpack_public_path__ + \"static/media/neuron.f053a99e.jpg\";","export default __webpack_public_path__ + \"static/media/programmer.b92e0ed6.jpg\";","export default __webpack_public_path__ + \"static/media/tired.1a9b062b.jpg\";","export default __webpack_public_path__ + \"static/media/logo.cf31c386.png\";","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../styles/app.css\";\nimport \"../../styles/scss/base.scss\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinus } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport logo from \"../../assets/logo.png\";\n\nfunction Navbar() {\n  const [toggle, setNavvy] = useState(false);\n\n  const navLinks = [\n    {\n      title: \"Home\",\n      path: \"/blog\",\n    },\n    {\n      title: \"Contact\",\n      path: \"/contact\",\n    },\n    // {\n    //   title: \"Login\",\n    //   path: \"/login\",\n    // },\n    // {\n    //   title: \"Blog\",\n    //   path: \"/blog\",\n    // },\n  ];\n\n  function setNavbarstatus() {\n    if (toggle) {\n      setNavvy(false);\n    } else {\n      setNavvy(true);\n    }\n  }\n\n  if (toggle) {\n    return (\n      <div className=\"flex justify-center bg-gray-900 text-gray-400 z-20 px-8\">\n        <div className=\"w-full md:w-700\">\n          <div className=\"flex justify-center items-center\">\n            {/* Left */}\n            <div className=\"w-1/3\">\n              <img className=\"h-8 my-4\" src={logo} alt=\"Logo\"></img>\n            </div>\n            {/* Middle */}\n            <div className=\"w-1/3 text-center font-bold px-4 md:text-xl lg:text-2xl\"></div>\n            {/* Right */}\n            <div className=\"w-1/3 flex justify-end items-stretch\">\n              {setNavvy && (\n                <ul className=\"flex font-semibold bg-gray-900\">\n                  {navLinks.map((link, index) => (\n                    <li className=\"px-6 my-auto\" key={index}>\n                      {setNavvy === link.path && (\n                        <Link\n                          to={link.path}\n                          className=\"h-full focus:outline-none border-b-2 border-transparent border-opacity-100 border-red-400\"\n                        >\n                          {link.title}\n                        </Link>\n                      )}\n                      {setNavvy !== link.path && (\n                        <Link\n                          to={link.path}\n                          className=\"focus:outline-none border-opacity-0 border-b-2 border-transparent hover:border-opacity-100 hover:border-b-2 hover:border-red-400 focus:border-red-400 focus:border-opacity-100 focus:border-b-2 active:border-opacity-100 active:border-b-2 active:border-red-400\"\n                        >\n                          {link.title}\n                        </Link>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n              <button\n                className=\"ml-4 focus:outline-none\"\n                onClick={setNavbarstatus}\n              >\n                <FontAwesomeIcon icon={faTimes} size=\"lg\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!toggle) {\n    return (\n      <div className=\"flex justify-center bg-gray-900 text-gray-400 z-20 px-8\">\n        <div className=\"w-full md:w-700\">\n          <div className=\"flex justify-center items-center bg-gray-900\">\n            <div className=\"w-1/3\">\n              <img className=\"h-8 my-4\" src={logo} alt=\"Logo\"></img>\n            </div>\n            <div className=\"w-full text-center font-bold px-4 md:text-xl lg:text-2xl\">\n              Solving the Syndrome\n            </div>\n            <div className=\"w-1/3 flex justify-end\">\n              <button\n                className=\"ml-4 focus:outline-none\"\n                onClick={setNavbarstatus}\n              >\n                <FontAwesomeIcon icon={faMinus} size=\"lg\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Navbar;\n","import moment from \"moment\";\n\nexport let featured = [\n  {\n    title: \"Software Engineer Salary in 2020\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"money.jpg\",\n  },\n  {\n    title: \"GraphQL vs Rest\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"React\", \"JavaScript\"],\n    link: \"#\",\n    image: \"graph.jpg\",\n  },\n  {\n    title: \"A Day in the Life of a Programmer\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"programmer.jpg\",\n  },\n  {\n    title: \"Brain Hacks for Learning to Program\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Personal Betterment\"],\n    link: \"#\",\n    image: \"neuron.jpg\",\n  },\n  {\n    title: \"Eat, Sleep, Code, Repeat?\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"tired.jpg\",\n  },\n  {\n    title: \"Monkey See Monkey Do?\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"tired.jpg\",\n  },\n];\n","import moment from \"moment\";\n\nexport let trending = [\n  {\n    title: \"Can Anyone Code?\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"money.jpg\",\n  },\n  {\n    title: \"Using AWS S3 for Storing Blog Images\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"React\", \"JavaScript\"],\n    link: \"#\",\n    image: \"graph.jpg\",\n  },\n  {\n    title: \"Popular Programming Languages in 2020\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"code.jpg\",\n  },\n  {\n    title: \"Objects and Arrays: A Practical Guide\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Personal Betterment\"],\n    link: \"#\",\n    image: \"banana.jpg\",\n  },\n  {\n    title: \"Grids & Flexbox For Noobs\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"grid.jpg\",\n  },\n];\n","import React from \"react\";\nimport { TagRow } from \"./\";\nimport \"../../styles/scss/masonryPost.scss\";\n\nexport default function MasonaryPost({ post, tagsOntop }) {\n  const imageBackground = {\n    backgroundPosition: `left top`,\n    borderRadius: `15px`,\n    padding: \"2px\",\n    backgroundImage: `url(\"${\n      require(`../../assets/images/${post.image}`).default\n    }\")`,\n  };\n\n  const style = { ...imageBackground, ...post.style, ...post.style };\n\n  return (\n    <main className=\"masonry-post bg-clip-content\" style={style}>\n      <a href={post.link} className=\"bg-light-blue-600 bg-opacity-50\">\n        <div className=\"image-text\">\n          <h2 className=\"p-2 bg-blue-800 bg-opacity-50 font-semibold\">\n            {post.title}\n          </h2>\n          <span className=\"image-date pl-2 text-white\">{post.date}</span>\n          <TagRow tags={post.categories} />\n        </div>\n      </a>\n    </main>\n  );\n}\n","import React from \"react\";\nimport { MasonryPost } from \"./\";\nimport \"../../styles/scss/postMasonry.scss\";\n\nconst PostMasonry = ({ posts, columns, tagsOnTop }) => {\n  const style = {\n    gridTemplateColumns: `repeat(${columns}, minxmax(275px, 1fr))`,\n  };\n\n  return (\n    <section className=\"mt-4 masonry\" style={style}>\n      {posts.map((post, index) => (\n        <MasonryPost {...{ post, index, tagsOnTop, key: index }} />\n      ))}\n    </section>\n  );\n};\n\nexport default PostMasonry;\n","import React, { useState, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Pagination } from \"antd\";\nimport { TagRow } from \"./\";\nimport \"../../styles/scss/postGrid.scss\";\n\nexport default function PostGrid({ posts }) {\n  const [pageSize, setPageSize] = useState(9);\n  const [current, setCurrent] = useState(1);\n\n  const paginatedPosts = useMemo(() => {\n    const lastIndex = current * pageSize;\n    const firstIndex = lastIndex - setPageSize;\n\n    return posts.slice(firstIndex, lastIndex);\n  }, [posts, current, pageSize]);\n\n  return (\n    <section>\n      {paginatedPosts.map((post, index) => (\n        <div className=\"post-container my-4\">\n          <h2 className=\"p-2 bg-blue-800 bg-opacity-50 font-semibold rounded-t-md\">\n            {post.title}\n          </h2>\n          <span className=\"image-date pl-2 text-white\">{post.date}</span>\n          <figure>\n            <Link to={post.link}>\n              <TagRow tags={post.categories} />\n              <img\n                src={require(`../../assets/images/${post.image}`).default}\n                alt={post.image}\n                className=\"post-grid-image rounded-lg\"\n              />\n            </Link>\n          </figure>\n        </div>\n      ))}\n      <Pagination\n        simple\n        showSizeChanger\n        onShowSizeChange={setPageSize}\n        pageSize={pageSize}\n        total={posts.length}\n        defaultCurrent={current}\n        onChange={setCurrent}\n        className=\"test flex justify-end font-bold\"\n      />\n    </section>\n  );\n}\n","const categoryColors = {\n  \"Tech Culture\": \"rgb(255,59,48)\",\n  \"Tech News\": \"rgb(0,113,164)\",\n  \"Personal Betterment\": \"rgb(255,45,85)\",\n  Vue: \"rgb(62,199,89)\",\n  React: \"rgb(64,156,255)\",\n  JavaScript: \"rgb(255,179,64)\",\n  Cloud: \"rgb(175,82,250\",\n};\n\nexport { categoryColors };\n","import React from \"react\";\nimport { categoryColors } from \"./styles\";\n\nexport default function TagRow({ tags }) {\n  const test = () => {\n    console.log(tags);\n  };\n\n  test();\n  return (\n    <div className=\"tagRow p-1\">\n      {tags.map((tag, index) => (\n        <span\n          key={index}\n          className=\"tag p-1 text-xs font-medium m-1 rounded\"\n          style={{ backgroundColor: categoryColors[tag] }}\n        >\n          {tag.toUpperCase()}\n        </span>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { featured } from \"../../mocks/featured\";\nimport { trending } from \"../../mocks/trending\";\nimport { PostMasonry, MasonryPost, PostGrid } from \"../../components/common\";\nimport \"../../styles/app.css\";\nimport \"../../styles/scss/home.scss\";\n\nconst trendingConfig = {\n  0: {\n    gridArea: \"1 / 1/ 2 / 3\",\n    height: \"300px\",\n  },\n  1: {\n    height: \"300px\",\n  },\n  3: {\n    height: \"630px\",\n    marginLeft: \"30px\",\n    width: \"630px\",\n  },\n};\n\nconst featuredConfig = {\n  0: {\n    gridArea: \"1 / 1/ 2 / 3\",\n    height: \"300px\",\n  },\n  1: {\n    height: \"300px\",\n  },\n  3: {\n    height: \"630px\",\n    marginLeft: \"30px\",\n    width: \"630px\",\n  },\n};\n\nconst mergeStyles = function (posts, config) {\n  posts.forEach((post, index) => {\n    // post.style = config[index];\n    post.author = \"Andrew Kraus\";\n    post.description = \"Lorem ipsum dolar sit amet, consecetur etc. etc. etc.\";\n    // console.log(post);\n  });\n};\n\nconst recentPosts = [...trending, ...featured, ...featured];\n\nmergeStyles(featured, featuredConfig);\nmergeStyles(trending, trendingConfig);\n\n// const lastPost = featured.pop()\nconst lastFeatured = featured.pop();\n\nexport default function Home() {\n  return (\n    <main>\n      <section className=\"container font-plex\">\n        <div>\n          <section className=\"flex flex-col mt-24\">\n            <MasonryPost post={lastFeatured} tagsOnTop={true} columns={3} />\n            <PostMasonry posts={featured} tagsOnTop={true} columns={3} />\n          </section>\n        </div>\n      </section>\n      <section className=\"container font-plex\">\n        <div>\n          <section className=\" \">\n            <PostGrid posts={recentPosts} />\n          </section>\n        </div>\n      </section>\n    </main>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/headshot.14aff8b9.png\";","import React, { useEffect } from \"react\";\nimport headshot from \"../../assets/headshot.png\";\nimport \"../../styles/scss/blog.scss\";\nimport \"../../styles/app.css\";\n\nconst Contact = () => {\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src =\n      \"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?lang=js&amp;skin=desert\";\n    script.async = true;\n    document.body.appendChild(script);\n  }, []);\n  return (\n    <section className=\"flex flex-col items-center justify-center mt-20\">\n      <div className=\"w-1/2 2xl:w-1/3\">\n        <h1 className=\"self-center text-5xl font-bold mb-2\">About Me</h1>\n        <h2 className=\"italic text-red-400\">June 5th, 2022</h2>\n        <p className=\"text-xl my-8 leading-10\">\n          In my professional experience, understanding the big picture (the\n          intersection of business, people, and technology) requires a good mix\n          of hard and soft skills and a lot of practice. Fifteen years into my\n          career and I’ve worked as a reseller, a network architect, a\n          manufacturer representative, and, most recently, a software engineer.\n          My employers have been some of the largest and most storied in the\n          business (IBM) to some of the smaller/more niche players vying to make\n          their mark (Convr). Like my experience, my skills are diverse, but the\n          common threads throughout are my desire to problem solve, the\n          satisfaction I get from helping others, and, of course, my love of\n          technology!\n        </p>\n        <p className=\"text-xl my-8 leading-10\">\n          More recently (in 2019), while working for IBM Security, I embarked on\n          a 6-month Web Development bootcamp with Northwestern University. Truth\n          be told, I had originally enrolled in their cybersecurity bootcamp so\n          as to build on top of my past networking and security training, but I\n          thought, “before you know how to break an app, it couldn’t hurt to\n          know how to build one”. I took a chance, signed up, and was hooked.\n        </p>\n        <p className=\"text-xl my-8 leading-10\">\n          Gaining developer experience was a game changer. At 36 years old, and\n          on the verge of starting a family, I had difficult decision to make. I\n          could continue my established path with IBM Security, accept an offer\n          for field engineer with Netskope, or do something completely different\n          from what I had done in the past by accepting a front-end web\n          developer position with a startup out of Schaumburg, IL. I took the\n          latter and turned a 3-month internship into a full-time job as a\n          professional software engineer eventually leading Convr’s front-end\n          developer team.\n        </p>\n        <p className=\"text-xl my-8 leading-10\">\n          While I’m extremely proud of and thankful for my experience at Convr,\n          I’m excited to take on new experiences. I’m interested in working\n          different technologies (e.g., other JavaScript frameworks like React\n          and Vue), meeting interesting and passionate people, and solving new\n          and challenging problems. While I enjoy all things code, I prefer\n          front-end development and design, though, if the right opportunity\n          presents itself, I’m all ears.\n        </p>\n        <div className=\"inline-flex items-center w-full pb-6\">\n          <img src={headshot} className=\"rounded-full h-16\" alt=\"Logo\"></img>\n          {/* Contact Details */}\n          <div className=\"ml-4 font-semibold text-base\">\n            <div className=\"flex flex-col\">\n              <div className=\"font-bold text-2xl\">Andrew Kraus</div>\n              <a\n                href=\"https://www.linkedin.com/in/andrewkraus/\"\n                className=\"hover:text-red-400\"\n              >\n                LinkedIn\n              </a>\n              <a\n                href=\"https://github.com/brokenhoax/\"\n                className=\"hover:text-red-400\"\n              >\n                GitHub\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../styles/scss/blog.scss\";\nimport \"../../styles/app.css\";\nimport headshot from \"../../assets/headshot.png\";\n\nconst Blog = () => {\n  const posts = [\n    {\n      title: \"I Know Kung Foo\",\n      date: \"5-5-2021\",\n      length: {\n        minutes: \"5\",\n        seconds: \"00\",\n      },\n      icon: \"fas fa-mug-hot\",\n      mugs: 1,\n      tagline: \"This is my red pill\",\n      path: \"/blog/i-know-kung-foo\",\n    },\n    {\n      title: \"Figma Slider\",\n      date: \"7-14-2022\",\n      length: {\n        minutes: \"15\",\n        seconds: \"00\",\n      },\n      icon: \"fas fa-mug-hot\",\n      mugs: 3,\n      tagline: \"Create a slider in Figma.\",\n      path: \"/blog/figma-slider\",\n    },\n    {\n      title: \"Ready Set Go\",\n      date: \"6-3-2021\",\n      length: {\n        minutes: \"10\",\n        seconds: \"00\",\n      },\n      icon: \"fas fa-mug-hot\",\n      mugs: 2,\n      tagline: \"You gotta start somewhere.\",\n      path: \"/blog/ready-set-go\",\n    },\n  ];\n\n  const test = () => {\n    let i;\n    let n = 2;\n    [...Array(n)].map((elementInArray, index) => (\n      <div className=\"\" key={i}>\n        {\" \"}\n        Whatever needs to be rendered repeatedly{\" \"}\n      </div>\n    ));\n  };\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src =\n      \"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?lang=js&amp;skin=desert\";\n    script.async = true;\n    document.body.appendChild(script);\n  }, []);\n  return (\n    <section className=\"flex items-center justify-center mt-32\">\n      <div className=\"inline-flex flex-col items-center space-x-4\">\n        <div className=\"inline-flex items-center w-full pb-6 ml-8\">\n          <img src={headshot} className=\"rounded-full h-16\" alt=\"Logo\"></img>\n          <div className=\"ml-4 font-semibold text-base\">\n            <div>Andrew Kraus</div>\n            <div className=\"pb-0.5 text-red-400\">@brokenhoax</div>\n          </div>\n        </div>\n        <ul>\n          {posts.map((post, index) => (\n            <li className=\"border-0 mt-6\" key={index}>\n              <Link\n                to={post.path}\n                className=\"text-4xl font-semibold text-red-400 hover:text-white\"\n              >\n                {post.title}\n              </Link>\n              <div className=\"leading-7\">\n                <div className=\"flex items-center\">\n                  {}\n                  <div className=\"text-lg text-red-400\">{post.tagline}</div>\n                  {test()}\n                  <i className={`${post.icon} px-2 text-gray-400`}></i>\n                  <p className=\"text-red-400\">{post.length.minutes} Minutes</p>\n                </div>\n                <div className=\"text-sm text-gray-400 font-semibold\">\n                  {post.date}\n                </div>\n              </div>\n            </li>\n          ))}\n          <li></li>\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default Blog;\n","import React, { useEffect } from \"react\";\nimport \"../../styles/scss/blog.scss\";\nimport \"../../styles/app.css\";\nimport kungfoo from \"../../assets/images/kung-foo.jpg\";\n\nconst IKnowKungFoo = () => {\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src =\n      \"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?lang=js&amp;skin=desert\";\n    script.async = true;\n    document.body.appendChild(script);\n  }, []);\n  return (\n    <section className=\"flex flex-col items-center mt-20\">\n      <div className=\"w-1/3\">\n        <h1 className=\"self-center text-5xl font-bold mb-2\">I Know Kung Foo</h1>\n        <h2 className=\"italic text-red-400\">March 5th, 2021</h2>\n        <p className=\"text-xl my-8 leading-10 mt-12\">\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus eum\n          voluptatem commodi. Assumenda voluptatum autem explicabo, cupiditate\n          nemo esse ex rem voluptates beatae ullam qui magni dignissimos totam\n          eius enim est illum numquam repellat molestiae doloremque alias\n          sapiente obcaecati? Alias laboriosam cupiditate sint mollitia aliquam?\n          Qui ipsa inventore ex reiciendis.\n        </p>\n        <div className=\"flex flex-col items-center\">\n          <img\n            src={kungfoo}\n            alt=\"Application\"\n            className=\"w-3/5 rounded-lg\"\n          ></img>\n        </div>\n        <p className=\"text-xl my-8 leading-10\">\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Iste vitae\n          deleniti nemo corporis magnam provident voluptas aspernatur laborum\n          veniam maxime mollitia harum pariatur sint, doloribus blanditiis,\n          libero et voluptate. Consequatur corporis delectus amet, sint odio\n          consequuntur quia quo exercitationem esse totam pariatur neque iusto\n          eum unde harum aspernatur distinctio non.\n        </p>\n        <p className=\"text-xl my-8 leading-10\">\n          Fast-forward to 2021, and\n          <a href=\"https://neuralink.com/\" className=\"text-red-400\">\n            {\" \"}\n            we're getting closer to making that a reality.\n          </a>{\" \"}\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eos quis\n          deleniti illum est optio voluptas eius explicabo nisi dolorum tempore\n          ipsa, deserunt quod quo, magnam consectetur adipisci veniam eum. Sint,\n          possimus incidunt. Repudiandae, nostrum aliquam. Inventore in culpa\n          quibusdam esse a excepturi quasi, rerum eum at, fugiat quas eligendi\n          autem quidem dolores porro dignissimos ipsa impedit fugit cumque.\n          Esse, vero?\n        </p>\n        <p className=\"text-xl my-8 leading-10\">\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sint ipsum\n          magnam minima illum. In id nemo earum quis culpa dolor minima quia.\n          Esse laboriosam accusantium quisquam eveniet dolorum exercitationem\n          officiis illum, ab consectetur non. Minus minima nihil magni, debitis\n          iure aliquid itaque eligendi ratione ab beatae porro ducimus fuga\n          dolores.\n        </p>\n        <div className=\"flex flex-col items-center\">\n          <pre className=\"w-full text-sm prettyprint text-red-400 bg-gray-900 leading-10 rounded-lg overflow-auto\">\n            {`\n    function life() {\n        let chance = Math.floor(Math.random() * 10) + 1;\n        if ( chance > 5 ) {\n          return console.log (\"You live!\") \n        } else {\n          return console.log (\"You die!\")\n        }\n    }\n              `}\n          </pre>\n        </div>\n        <p className=\"text-xl my-8 leading-10\">\n          Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n          Consequuntur, cum soluta nostrum sequi neque laborum esse ad libero\n          placeat aliquam hic nesciunt omnis assumenda ab autem aliquid nulla\n          eveniet unde itaque repellendus vel iste reprehenderit? Perspiciatis\n          eum vero eaque fugit, quidem reiciendis iste, harum nobis error soluta\n          totam odio assumenda voluptatum ullam qui. Dolorem quos esse suscipit\n          aut excepturi aliquid?\n        </p>\n        <p className=\"text-xl my-8 leading-10\">\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim\n          perspiciatis rem odio ad delectus, dolore repellat dolores autem\n          exercitationem facilis reiciendis ratione, debitis eligendi doloremque\n          mollitia pariatur dignissimos doloribus. Libero ut eligendi facere\n          odit eos eaque labore tenetur fugit vel soluta id nostrum quis,\n          tempore cum deleniti! Vel ipsa quos quaerat veniam molestiae quam!\n          Iusto numquam adipisci ea nesciunt quaerat minus non aperiam, in ipsum\n          ullam, praesentium harum illum veniam! Lorem ipsum dolor sit amet\n          consectetur adipisicing elit. Voluptatem nihil facere maxime\n          distinctio impedit, officiis dolor excepturi ab placeat ad!\n        </p>\n      </div>\n    </section>\n  );\n};\n\nexport default IKnowKungFoo;\n","import React, { useEffect, useState } from \"react\";\nimport { HashLink } from \"react-router-hash-link\";\nimport \"../../styles/scss/blog.scss\";\nimport \"../../styles/app.css\";\nimport slider_handle from \"../../assets/images/slider_handle.png\";\nimport logo from \"../../assets/logo.png\";\n\nconst FigmaSlider = () => {\n  const [toggle, setToggle] = useState(false);\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src =\n      \"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?lang=js&amp;skin=desert\";\n    script.async = true;\n    document.body.appendChild(script);\n  }, []);\n\n  let test = true;\n\n  return (\n    <section className=\"flex flex-col items-center leading-9 text-lg mt-20 pb-32\">\n      <div className=\"w-full md:w-700 space-y-8\">\n        {/* Title */}\n        <div class=\"space-y-4\">\n          <h1 className=\"self-center text-5xl font-bold\" id=\"title\">\n            Figma Slider\n          </h1>\n          <div className=\"italic text-red-400\">June 8th, 2022</div>\n          <div className=\"block border-b border-gray-700\"></div>\n          <p className=\"text-2xl leading-10 mt-12 italic\">\n            I'm working on a mockup for a new feature at work and I've been\n            asked to include a slider that allows a user to change \"synonym\n            sensitivity\" on a scale from zero to one. I figured building a\n            slider in Figma would be a worthy challenge and one worth sharing.\n            For starters, this tutorial will expose you to the Figma concepts of\n            components/variants, constraints, interactions, and basic styling.\n            Let's jump in!\n          </p>\n        </div>\n        {/* Table of Contents */}\n        <div>\n          <h2 id=\"toc\" className=\"text-2xl font-semibold pb-2 text-gray-500\">\n            Table of Contents\n          </h2>\n          <ol className=\"list-decimal pl-8 font-medium space-y-2 text-xl  text-gray-600\">\n            <li>\n              <HashLink to=\"/blog/figma-slider#components-and-variants\">\n                Components and Variants\n              </HashLink>\n            </li>\n            <li>\n              <HashLink to=\"/blog/figma-slider#slider-handle\">\n                Slider Handle\n              </HashLink>\n            </li>\n            <li>\n              <HashLink to=\"/blog/figma-slider#slider-bar\">Slider Bar</HashLink>\n            </li>\n            <li>\n              <HashLink to=\"/blog/figma-slider#interactions\">\n                Interactions\n              </HashLink>\n            </li>\n            <li>\n              <HashLink to=\"/blog/figma-slider#constraints\">\n                Constraints\n              </HashLink>\n            </li>\n          </ol>\n        </div>\n        <div className=\"block border-b border-gray-700\"></div>\n        {/* Components and Variants */}\n        <div className=\"space-y-4\">\n          <h2 id=\"components-and-variants\" className=\"text-3xl font-semibold\">\n            Components and Variants{\" \"}\n            <span className=\"text-3xl text-red-400 pl-1\">\n              {\" \"}\n              <HashLink to=\"/blog/figma-slider#title\">#</HashLink>\n            </span>\n          </h2>\n          <p>\n            If you think about where you've encountered a slider on the web, you\n            might recall that a typical slider consists of three parts: a\n            handle, a bar, and some scale indicators. Most sliders increment in\n            single digits or, at the most, no more than two decimal points, but\n            to build out such a granular slider in Figma wouldn't be practical\n            because, well, we don't build apps in Figma we build prototypes of\n            apps (which means they don't have to be perfect representations of\n            the real thing).\n          </p>\n          <p>\n            That said, we'll be building three sliders in this tutorial in order\n            for the slider to, well, slide! The first slider will represent the\n            slider if it were at the lowest point of the scale—in our case zero\n            or “0”. The second slider will represent the slider at half scale\n            (0.5) and the third at full scale (1). We'll create a slider\n            “Component” which has three “Variants” each representing one of our\n            three slider states of “zero”, “half”, and “full”. Before we start\n            building our slider, let's give it a home to live within Figma.\n            Let's create a new frame and call it “slider”.\n          </p>\n          {/* Slider SVG */}\n          <div className=\"flex items-center justify-center pt-4 w-full\">\n            <svg\n              width=\"372\"\n              height=\"276\"\n              viewBox=\"0 0 272 176\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <line\n                x1=\"22\"\n                y1=\"36\"\n                x2=\"34\"\n                y2=\"36\"\n                stroke=\"#0284C7\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n              />\n              <path\n                d=\"M250 38C251.105 38 252 37.1046 252 36C252 34.8954 251.105 34 250 34L250 38ZM36 38L250 38L250 34L36 34L36 38Z\"\n                fill=\"#E0F2FE\"\n              />\n              <circle cx=\"36\" cy=\"36\" r=\"16\" fill=\"#0284C7\" />\n              <circle cx=\"36\" cy=\"36\" r=\"8\" fill=\"#F0F9FF\" />\n              <line\n                x1=\"22\"\n                y1=\"88\"\n                x2=\"133\"\n                y2=\"88\"\n                stroke=\"#0284C7\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n              />\n              <path\n                d=\"M250 90C251.105 90 252 89.1046 252 88C252 86.8954 251.105 86 250 86V90ZM135 90H250V86H135V90Z\"\n                fill=\"#E0F2FE\"\n              />\n              <circle cx=\"135\" cy=\"88\" r=\"16\" fill=\"#0284C7\" />\n              <circle cx=\"135\" cy=\"88\" r=\"8\" fill=\"#F0F9FF\" />\n              <path\n                d=\"M250 142C251.105 142 252 141.105 252 140C252 138.895 251.105 138 250 138L250 142ZM236 142L250 142L250 138L236 138L236 142Z\"\n                fill=\"#E0F2FE\"\n              />\n              <line\n                x1=\"22\"\n                y1=\"140\"\n                x2=\"228\"\n                y2=\"140\"\n                stroke=\"#0284C7\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n              />\n              <circle cx=\"236\" cy=\"140\" r=\"16\" fill=\"#0284C7\" />\n              <circle cx=\"236\" cy=\"140\" r=\"8\" fill=\"#F0F9FF\" />\n              <rect\n                x=\"0.5\"\n                y=\"0.5\"\n                width=\"271\"\n                height=\"175\"\n                rx=\"4.5\"\n                stroke=\"#9747FF\"\n                stroke-dasharray=\"10 5\"\n              />\n            </svg>\n          </div>\n        </div>\n        <div className=\"block border-b border-gray-700\"></div>\n        {/* Slider Handle */}\n        <div className=\"flex flex-col space-y-4\">\n          <h2 id=\"slider-handle\" className=\"text-3xl font-semibold\">\n            Slider Handle{\" \"}\n            <span className=\"text-3xl text-red-400 pl-1\">\n              {\" \"}\n              <HashLink to=\"/blog/figma-slider#title\">#</HashLink>\n            </span>\n          </h2>\n          <p>\n            Now that we know what we're building and where it should live, let's\n            work on the first piece of our slider—the slider handle:\n            {/* Slider Handle Image */}\n            <div className=\"flex flex-col items-center justify-center pt-4\">\n              {toggle && (\n                <button className=\"\">\n                  <img\n                    onClick={() => setToggle((prevCheck) => !prevCheck)}\n                    className=\"rounded-md h-64\"\n                    src={slider_handle}\n                    alt=\"slider_handle\"\n                  ></img>\n                </button>\n              )}\n              {!toggle && (\n                <button className=\"\">\n                  <img\n                    onClick={() => setToggle((prevCheck) => !prevCheck)}\n                    className=\"rounded-md h-128\"\n                    src={slider_handle}\n                    alt=\"slider_handle\"\n                  ></img>\n                </button>\n              )}\n              <button\n                onClick={() => setToggle((prevCheck) => !prevCheck)}\n                className=\"flex items-center py-2 space-x-2\"\n              >\n                <i\n                  className={`fas fa-camera ${toggle ? \"text-lg\" : \"text-sm\"}`}\n                ></i>\n                <div className={`${toggle ? \"text-sm\" : \"text-xs\"}`}>\n                  Slider handle component in Figma (Large Preview)\n                </div>\n              </button>\n            </div>\n          </p>\n          <p>\n            Our handle will be a simple circle shape handle consisting of two\n            circles: a big, outer circle and a smaller, inner circle for added\n            style. We'll kick things off in Figma by creating a circle shape\n            with a width and height of 32 x 32 pixels and a color of dark blue.\n            Our inner circle will be white with a measurement of 16 x 16 pixels.\n            We'll place the inner circle directly in the center of the larger\n            circle and we'll frame them together by selecting both and clicking\n            “Frame Selection”. Let's name that frame “handle”, drag it into our\n            “slider” frame, and we can move on to adding our slider bar.\n          </p>\n        </div>\n        {/* Slider Bar */}\n        <div className=\"space-y-4\">\n          <h2 id=\"slider-bar\" className=\"text-3xl font-semibold\">\n            Slider Bar{\" \"}\n            <span className=\"text-3xl text-red-400 pl-1\">\n              {\" \"}\n              <HashLink to=\"/blog/figma-slider#title\">#</HashLink>\n            </span>\n          </h2>\n          <p>\n            Next up is the slider bar which we'll have positioned horizontally\n            with the zero scale indicator on the left and the one scale\n            indicator on the right. Now, creating the slider bar is a bit\n            deceiving in Figma because the bar should look different for each of\n            our states. Our empty state will have a single, light-blue colored\n            slider bar with the slider handle all the way to the left. Our half\n            state will have two bars of equal length with the slider handle in\n            the center of the two. Our full state will have a single, dark-blue\n            colored slider bar with the slider handle to the far right.\n          </p>\n          <p>\n            Why the different colors? When the user moves the slider from empty\n            to half we need to indicate to the user that we're incrementing the\n            scale. We can do that with our slider indicators but we also want to\n            make this more visually obvious (and interesting) by using color.\n            The respective colored bars indicate to the user that the slider is\n            incrementing the scale when the handle is moved from left to right\n            and right to left.\n          </p>\n          <p>\n            We can make our slider bars any length but each variant's slider bar\n            lengths should be uniform. Let's go with 256 pixels which means\n            that, for our half-state slider the dark-blue slider bar will be\n            128px and the light-blue slider bar will be 128px for a total of 256\n            pixels. Since we're starting with an empty state slider we'll just\n            create one slider bar with a color of light-blue and a width of\n            256px. We'll now place our slider handle center and to the far left\n            of our slider bar and we'll select both the slider bar and handle\n            and put them in a frame. We'll then turn that frame into a component\n            which we'll name “empty”. Once we have our Figma component, we can\n            create two additional variants which we'll call “half” and “full”.\n            You'll notice that these variants are identical to our default\n            “empty” variant, so we'll need to make some tweaks to make each\n            variant represent their respective states. Don't forget to add two\n            slider bars for our “half” state!\n          </p>\n        </div>\n        {/* Interactions */}\n        <div className=\"space-y-4\">\n          <h2 id=\"interactions\" className=\"text-3xl font-semibold\">\n            Interactions{\" \"}\n            <span className=\"text-3xl text-red-400 pl-1\">\n              {\" \"}\n              <HashLink to=\"/blog/figma-slider#title\">#</HashLink>\n            </span>\n          </h2>\n          <p>\n            Now that we've built our slider component and variants, let's\n            discuss how we'll make our slider interactive. Since we aren't\n            writing code in Figma, we have to first think about how we can\n            accomplish this with animations or, as Figma calls them,\n            “interactions”. So what type of interaction would we use in Figma to\n            make our slider functional? Typical interactions that a user might\n            have with a web app include clicking their mouse or typing with\n            their keyboard; however, a typical slider interaction involves a\n            user clicking on the slider handle and dragging the slider\n            horizontally or vertically to increase or decrease the scale as is\n            indicated by the slider scale indicators. Luckily for us, Figma has\n            an “on-drag” interaction that we can use.{\" \"}\n          </p>\n          <p>\n            Now we need to think about what happens when a user clicks the\n            slider handle and drags it. If the “dragging” action is the cause,\n            then what's the effect? In our case, we'll choose “Change To” as the\n            effect of the user dragging the slider and our “change to” effect\n            will point to the next logical slider variant. For instance, if a\n            user was to click and drag the slider handle on our empty state\n            slider then our Figma interaction would logically “change to” our\n            next slider variant of “half”. If the user continued to drag the\n            slider handle from the “half” state further up the slider scale,\n            then we should set the “change to” action to change from the “half”\n            state to the “full” state. Obviously, this interaction wouldn't be\n            as smooth as a real slider since the slider, in our case, can only\n            be in three positions, but it gets the point across and, if you\n            really have the time, you can choose to make more variants that go\n            win smaller increments (such as in increments of .10 ranging from 0\n            to 1. For the purposes of this tutorial, we'll keep things simple.\n          </p>\n        </div>\n        {/* Constraints */}\n        <div className=\"space-y-4\">\n          <h2 id=\"constraints\" className=\"text-3xl font-semibold\">\n            Constraints{\" \"}\n            <span className=\"text-3xl text-red-400 pl-1\">\n              {\" \"}\n              <HashLink to=\"/blog/figma-slider#title\">#</HashLink>\n            </span>\n          </h2>\n          <p>\n            Our sliders look really good but there's a few problems we haven't\n            considered yet and that's reusability and responsiveness. If we want\n            to use this slider in our app then we can simply drop it in as is,\n            but what if we want to make it bigger? Or, perhaps we're fine with\n            the size of the slider but what if whomever is reviewing our\n            prototype wants to shrink or grow their size of their viewport\n            (screen)? What effect will that have on our slider? Unfortunately,\n            because we haven't set any constraints on the pieces of our slider\n            we cannot expect it to maintain the positioning of each part of the\n            slider and we can expect our slider to get distorted if the size of\n            it, or the user's viewport, is changed.\n          </p>\n          <p>\n            With Figma's “constraints” feature we can set constraints on the\n            slider bar(s), handle, and even the frames that encapsulate the\n            pieces of our slider. When it comes to constraints all you need to\n            know is that the constraints applied to the Figma object are\n            relative to its parent object. For instance, with our slider handle,\n            the inner circle is the child object and the outer circle it lives\n            within is its parent object. Furthermore, the outer circle's parent\n            object is the frame that it lives within.\n          </p>\n          <p>\n            That said, for our empty state, our slider bar will have its\n            horizontal constraint set to “left and right” and a vertical\n            constraint set to “top and bottom”. Our empty state's slider handle\n            frame will have a horizontal constraint of “left” and a vertical\n            constraint of “top and bottom”. Our empty state slider handle outer\n            circle will have a horizontal constraint of “left” and a vertical\n            constraint of “top and bottom” and our empty state slider handle\n            inner circle will have a horizontal and vertical constraint both set\n            to “center”.\n          </p>\n          <p>\n            Our half state's constraints is probably the trickiest part of this\n            Figma project. Both slider bars will have a horizontal constraint of\n            “scale” and a vertical constraint of “top and bottom”. Our slider\n            handle frame will have a horizontal constraint of “center” so that\n            it maintains its centered position on the slider bar and a vertical\n            constraint of “top and bottom”. Our outer circle will have a\n            horizontal constraint of “left and right” and a vertical constraint\n            of “center” and our inner circle will maintain the same “center /\n            center” constraints as was described above.\n          </p>\n          <p>\n            Last but not least, our full state's constraints are similar to our\n            empty state's constraints but inverted for the slider handle frame.\n            So, our slider bar will have a horizontal constraint of “left and\n            right” and a vertical constraint of “top and bottom” whereas the\n            slider handle frame will have a horizontal constraint of “right” and\n            a vertical constraint of “top and bottom”. Our slider handle outer\n            circle will have a horizontal constraint of “top and bottom” and a\n            vertical constraint of “left and right” and our inner circle will\n            have a horizontal and vertical constraint both set to “center”.\n          </p>\n          <p>\n            It took me a little while to understand how constraints worked and I\n            came to a better understanding by trying different settings and\n            testing their effect. So, change one or two constraints, grab the\n            variant frame and shrink and grow it to see what happens. Viola! Our\n            slider prototype is now ready to be demonstrated. Pat yourself on\n            the back, grab another cup of coffee, and let's go! 🎉\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default FigmaSlider;\n","import React, { useEffect } from \"react\";\nimport { HashLink } from \"react-router-hash-link\";\nimport \"../../styles/scss/blog.scss\";\nimport \"../../styles/app.css\";\nimport logo from \"../../assets/logo.png\";\n\nconst ReadySetGo = () => {\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src =\n      \"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?lang=bsh&amp;skin=desert\";\n    script.async = true;\n    document.body.appendChild(script);\n  }, []);\n  return (\n    <section className=\"flex flex-col items-center leading-9 text-lg mt-20\">\n      <div className=\"w-1/2 sm:w-1/2 2xl:1/4 space-y-4\">\n        <h1 className=\"self-center text-5xl font-bold\">Ready Set Go</h1>\n        <p className=\"italic text-red-400\">June 8th, 2022</p>\n        <div className=\"block border-b border-gray-700\"></div>\n        <p className=\"text-2xl leading-10 mt-12 italic\">\n          So, you've dabbled with{\" \"}\n          <span>\n            <a\n              href=\"https://create-react-app.dev/docs/getting-started\"\n              className=\"px-1 text-red-300 hover:text-red-400\"\n            >\n              create-react-app\n            </a>\n          </span>{\" \"}\n          and you're ready to build something useful and share it with the\n          world. Now what? This post will walk through the following steps:\n        </p>\n        <ol className=\"list-decimal pt-2 pb-4 pl-8 font-medium space-y-2 text-xl  text-gray-600\">\n          <li>\n            <HashLink to=\"/blog/ready-set-go#register\">\n              Setting up an account on GitHub\n            </HashLink>\n          </li>\n          <li>\n            <HashLink to=\"/blog/ready-set-go#create\">\n              Creating a GitHub repository\n            </HashLink>\n          </li>\n          <li>\n            <HashLink to=\"/blog/ready-set-go#clone\">\n              Cloning your Github repository\n            </HashLink>\n          </li>\n          <li>\n            <HashLink to=\"/blog/ready-set-go#push\">\n              Pushing your changes to Github\n            </HashLink>\n          </li>\n          <li>\n            <HashLink to=\"/blog/ready-set-go#build\">\n              Creating a production build\n            </HashLink>\n          </li>\n          <li>\n            {\" \"}\n            <HashLink to=\"/blog/ready-set-go#deploy\">\n              Deploying your production build to Github Pages\n            </HashLink>\n          </li>\n        </ol>\n        <div className=\"block border-b border-gray-700\"></div>\n        <h2 id=\"register\" className=\"text-3xl pt-2 font-semibold\">\n          Setting up an account on Github\n        </h2>\n        <p>\n          You need a place to store your code and Github is pretty much the\n          defacto code repo on the web. Let's sign up at{\"\"}\n          <span className=\"px-1 text-red-300 hover:text-red-400\">\n            <a href=\"https://github.com/signup\">Github Signup</a>\n          </span>\n          and follow the prompts to set up an account.\n        </p>\n        <h2 id=\"create\" className=\"text-3xl pt-2 font-semibold\">\n          Creating a GitHub repository\n        </h2>\n        <p>\n          There should be a green button on your GitHub homepage labeled \"New\".\n          Click it to create a new repository or\n          <span className=\"px-1 text-red-300 hover:text-red-400\">\n            <a href=\"https://github.com/new\">click here</a>\n          </span>\n          to save a few keyboard strokes. Give your repository a name and set it\n          to \"public\". No need to bother with any of the other settings for now.\n        </p>\n        <h2 id=\"clone\" className=\"text-3xl pt-2 font-semibold\">\n          Cloning your GitHub repository\n        </h2>\n        <p>\n          You'll want to save your app to your computer and sync it to GitHub.\n          So, we'll create a folder for our app and we'll clone our GitHub\n          repository to the same folder.\n        </p>\n        <pre className=\"pt-24 text-lg prettyprint text-red-400 bg-gray-900 leading-10 rounded-2xl overflow-auto mr-auto\">\n          {`\n    ## Create and access a directory for your app\n    mkdir my_app\n    cd my_app\n    ## Clone your repository\n    git clone <your-git-repository>\n          `}\n        </pre>\n        <h2 id=\"push\" className=\"text-3xl pt-2 font-semibold\">\n          Make and push your changes to Github\n        </h2>\n        <p>\n          Refer to the{\" \"}\n          <a\n            href=\"https://create-react-app.dev/docs/getting-started\"\n            className=\"text-red-300 hover:text-red-400\"\n          >\n            Create React App\n          </a>\n          &nbsp; tutorial for creating your new React app. Make sure you're\n          still in your \"my_app\" directory when creating your new React\n          application. Once you're ready to save your app, just push your code\n          to Github and continue on to \"Creating a production build\".{\" \"}\n        </p>\n        <pre className=\"text-lg prettyprint text-red-400 bg-gray-900 leading-10 rounded-2xl overflow-auto mr-auto\">\n          {`\n  # Stage all of your changes\n  git add --all\n  # Commit all of your changes and add a message\"\n  git commit -m \"my_app - initial commit\"\n  # Push your code!\n  git push\n          `}\n        </pre>\n        <h2 id=\"build\" className=\"text-3xl pt-2 font-semibold\">\n          Creating a production build\n        </h2>\n        <p>\n          The production build is an web optimized version of our app. This is\n          the version we'll post to GitHub pages. Production builds improve load\n          time which makes for happier users. So run that build and get ready to\n          deploy your app.\n        </p>\n        <pre className=\"text-lg prettyprint text-red-400 bg-gray-900 leading-10 rounded-2xl overflow-auto mr-auto\">\n          {`\n  # Create your product build\n  npm run build\n          `}\n        </pre>\n        <h2 id=\"deploy\" className=\"text-3xl pt-2 font-semibold\">\n          Deploying your build to Github Pages\n        </h2>\n        <p>\n          Deploy your app to GitHub pages and check your published site to\n          confirm your changes!\n        </p>\n        <pre className=\"text-lg prettyprint text-red-400 bg-gray-900 leading-10 rounded-2xl overflow-auto mr-auto\">\n          {`\n  # Deploy your build to gh-pages\n  npm run deploy\n  😎`}\n        </pre>\n      </div>\n      <footer className=\"flex items-end justify-end h-48 mt-12 w-full bg-gray-900 opacity-50\">\n        <div className=\"asolute\"> </div>{\" \"}\n      </footer>\n      <div className=\"relative flex items-center z-10 -m-16\">\n        <div className=\"text-xs\">2022 Solving the Syndrome</div>\n        <img className=\"h-6 m-4\" src={logo} alt=\"Logo\"></img>\n      </div>\n    </section>\n  );\n};\n\nexport default ReadySetGo;\n","import Navbar from \"./components/navbar/Navbar\";\nimport Home from \"./pages/blog/home\";\nimport Contact from \"./pages/blog/contact\";\nimport Blog from \"./pages/blog/blog\";\nimport IKnowKungFoo from \"./pages/blog/i-know-kung-fu\";\nimport FigmaSlider from \"./pages/blog/figma-slider\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport \"./styles/scss/base.scss\";\nimport \"./styles/app.css\";\nimport ReadySetGo from \"./pages/blog/ready-set-go\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"wrapper h-screen text-gray-400 font-plex\">\n        <Navbar className=\"navbar\" />\n        <div className=\"px-8\">\n          <Switch>\n            <Route path=\"/\" exact={true} component={Blog} />\n            <Route\n              path=\"/home\"\n              exact={true}\n              className=\"home\"\n              component={Home}\n            />\n            {/* <Route\n            path=\"/login\"\n            exact={true}\n            className=\"login\"\n            component={Login}\n          /> */}\n            <Route\n              path=\"/blog\"\n              exact={true}\n              className=\"blog\"\n              component={Blog}\n            />\n            <Route\n              path=\"/blog/figma-slider\"\n              exact={true}\n              className=\"slider\"\n              component={FigmaSlider}\n            />\n            <Route\n              path=\"/blog/i-know-kung-foo\"\n              exact={true}\n              className=\"blog\"\n              component={IKnowKungFoo}\n            />\n            <Route\n              path=\"/blog/ready-set-go\"\n              exact={true}\n              className=\"blog\"\n              component={ReadySetGo}\n            />\n            <Route\n              path=\"/contact\"\n              exact={true}\n              className=\"contact\"\n              component={Contact}\n            />\n            <Redirect from=\"*\" to=\"/404\" />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/slider_handle.29162458.png\";","export default __webpack_public_path__ + \"static/media/kung-foo.6fad6739.jpg\";","var map = {\n\t\"./banana.jpg\": 126,\n\t\"./code.jpg\": 127,\n\t\"./graph.jpg\": 128,\n\t\"./grid.jpg\": 129,\n\t\"./kung-foo.jpg\": 79,\n\t\"./money.jpg\": 130,\n\t\"./neuron.jpg\": 131,\n\t\"./programmer.jpg\": 132,\n\t\"./slider_handle.png\": 65,\n\t\"./tired.jpg\": 133\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 86;"],"sourceRoot":""}