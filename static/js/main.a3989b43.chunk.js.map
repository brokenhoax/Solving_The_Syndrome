{"version":3,"sources":["assets/images/banana.jpg","assets/images/code.jpg","assets/images/constraints.png","assets/images/graph.jpg","assets/images/grid.jpg","assets/images/money.jpg","assets/images/neuron.jpg","assets/images/programmer.jpg","assets/images/slider_mov.gif","assets/images/tired.jpg","assets/logo.png","components/common/toggle.jsx","components/navbar/Navbar.jsx","mocks/featured.js","mocks/trending.js","components/common/masonryPosts.jsx","components/common/postMasonry.jsx","components/common/postGrid.jsx","components/common/styles.jsx","components/common/tagRow.jsx","pages/blog/home.jsx","assets/headshot.jpg","components/common/footer.jsx","pages/blog/about.jsx","pages/blog/blog.jsx","pages/blog/dark-mode.jsx","pages/blog/i-know-kung-fu.jsx","components/common/image.jsx","pages/blog/figma-slider.jsx","pages/blog/react-components.jsx","pages/blog/ready-set-go.jsx","App.js","reportWebVitals.js","index.js","assets/images/kung-foo.jpg","assets/images/constraints_full.png","assets/images/constraints_half.png","assets/images/constraints_zero.png","assets/images/interactions.png","assets/images/slider.png","assets/images/slider_bar.png","assets/images/slider_handle.png","assets/images sync /^/.*$"],"names":["Toggle","useState","toggled","setToggled","useEffect","fn","window","matchMedia","query","matches","addEventListener","event","runColorMode","isDarkMode","console","log","document","body","classList","remove","add","className","onClick","Navbar","toggle","setNavvy","setNavbarstatus","src","logo","alt","title","path","map","link","index","to","featured","date","moment","format","categories","image","trending","MasonaryPost","post","imageBackground","tagsOntop","backgroundPosition","borderRadius","padding","backgroundImage","require","default","style","href","TagRow","tags","PostMasonry","posts","columns","tagsOnTop","gridTemplateColumns","key","PostGrid","pageSize","setPageSize","current","setCurrent","paginatedPosts","useMemo","lastIndex","firstIndex","slice","simple","showSizeChanger","onShowSizeChange","total","length","defaultCurrent","onChange","categoryColors","Vue","React","JavaScript","Cloud","tag","backgroundColor","toUpperCase","mergeStyles","config","forEach","author","description","recentPosts","lastFeatured","pop","Home","Footer","About","scrollTo","headshot","target","rel","Blog","script","createElement","async","appendChild","id","minutes","seconds","icon","mugs","tagline","DarkMode","IKnowKungFoo","kungfoo","Image","props","showImage","message","FigmaSlider","prototype","scroll","el","scrollIntoView","behavior","block","smooth","slider_handle","slider_bar","interactions","constraint_zero","constraint_half","constraint_full","ReadySetGo","App","localStorage","setItem","selectedTheme","getItem","exact","component","ReactComponents","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.a3989b43.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banana.77ff416c.jpg\";","export default __webpack_public_path__ + \"static/media/code.b071a8a1.jpg\";","export default __webpack_public_path__ + \"static/media/constraints.f6cc0de4.png\";","export default __webpack_public_path__ + \"static/media/graph.e21dccb6.jpg\";","export default __webpack_public_path__ + \"static/media/grid.d47fe448.jpg\";","export default __webpack_public_path__ + \"static/media/money.7ae5265a.jpg\";","export default __webpack_public_path__ + \"static/media/neuron.f053a99e.jpg\";","export default __webpack_public_path__ + \"static/media/programmer.b92e0ed6.jpg\";","export default __webpack_public_path__ + \"static/media/slider_mov.56aaf8b9.gif\";","export default __webpack_public_path__ + \"static/media/tired.1a9b062b.jpg\";","export default __webpack_public_path__ + \"static/media/logo.cf31c386.png\";","import React, { useEffect, useState } from \"react\";\r\nimport \"../../styles/scss/blog.scss\";\r\nimport \"../../styles/app.css\";\r\n\r\nconst Toggle = () => {\r\n  const [toggled, setToggled] = useState(true);\r\n\r\n  function handleToggle() {\r\n    setToggled(!toggled);\r\n    if (toggled) {\r\n      document.body.classList.remove(\"dark\");\r\n      document.body.classList.add(\"light\");\r\n      console.log(\"Dark mode DISABLED...\");\r\n    } else {\r\n      document.body.classList.remove(\"light\");\r\n      document.body.classList.add(\"dark\");\r\n      console.log(\"Dark mode ENABLED...\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const runColorMode = (fn) => {\r\n      if (!window.matchMedia) {\r\n        return;\r\n      }\r\n      const query = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n      fn(query.matches);\r\n      query.addEventListener(\"change\", (event) => fn(event.matches));\r\n    };\r\n    runColorMode((isDarkMode) => {\r\n      if (isDarkMode) {\r\n        console.log(\"Dark mode enabled...\");\r\n        document.body.classList.remove(\"light\");\r\n        document.body.classList.add(\"dark\");\r\n        setToggled(true);\r\n      } else {\r\n        console.log(\"Dark mode disabled...\");\r\n        document.body.classList.remove(\"dark\");\r\n        document.body.classList.add(\"light\");\r\n        setToggled(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center\">\r\n      <button\r\n        onClick={handleToggle}\r\n        className={`toggle-btn ${toggled ? \"toggled\" : \"\"}`}\r\n      >\r\n        <div className=\"thumb flex items-center justify-center\">\r\n          <i\r\n            className={`${\r\n              toggled\r\n                ? \"fas fa-moon text-gray-500 text-xs\"\r\n                : \"fas fa-sun text-red-400 text-xs\"\r\n            }`}\r\n          ></i>\r\n        </div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toggle;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/app.css\";\r\nimport \"../../styles/scss/base.scss\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport Toggle from \"../../components/common/toggle\";\r\n\r\nfunction Navbar() {\r\n  const [toggle, setNavvy] = useState(false);\r\n\r\n  const navLinks = [\r\n    {\r\n      title: \"Home\",\r\n      path: \"/Solving_The_Syndrome/blog\",\r\n    },\r\n    {\r\n      title: \"About\",\r\n      path: \"/Solving_The_Syndrome/about\",\r\n    },\r\n    // {\r\n    //   title: \"Login\",\r\n    //   path: \"/login\",\r\n    // },\r\n    // {\r\n    //   title: \"Blog\",\r\n    //   path: \"/blog\",\r\n    // },\r\n  ];\r\n\r\n  function setNavbarstatus() {\r\n    if (toggle) {\r\n      setNavvy(false);\r\n    } else {\r\n      setNavvy(true);\r\n    }\r\n  }\r\n\r\n  if (!toggle) {\r\n    return (\r\n      <div className=\"dark flex items-center justify-center\">\r\n        <div className=\"mb-8 fixed top-0 flex justify-between items-center bg-gray-900 h-16 rounded-b-3xl px-8 py-4 md:w-700 -mt-1 border border-red-400\">\r\n          {/* Left */}\r\n          <div className=\"flex items-center\">\r\n            {setNavvy && (\r\n              <ul className=\"flex font-semibold space-x-4\">\r\n                <button onClick={setNavbarstatus}>\r\n                  <img className=\"w-8 h-8\" src={logo} alt=\"Logo\"></img>\r\n                </button>\r\n                {navLinks.map((link, index) => (\r\n                  <li\r\n                    className=\"flex items-center justify-between my-auto\"\r\n                    key={index}\r\n                  >\r\n                    {setNavvy === link.path && (\r\n                      <Link\r\n                        to={link.path}\r\n                        className=\"bg-gray-900 hover:bg-gray-800 rounded-lg text-gray-200 px-3 py-2 font-semibold focus:bg-gray-800\"\r\n                      >\r\n                        {link.title}\r\n                      </Link>\r\n                    )}\r\n                    {setNavvy !== link.path && (\r\n                      <Link\r\n                        to={link.path}\r\n                        className=\"bg-gray-900 hover:bg-gray-800 rounded-lg text-gray-200 px-3 py-2 font-semibold focus:bg-gray-800\"\r\n                      >\r\n                        {link.title}\r\n                      </Link>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n          {/* Right */}\r\n          <div className=\"pl-8\">\r\n            <Toggle />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (toggle) {\r\n    return (\r\n      <div className=\"dark flex items-center justify-center\">\r\n        <div className=\"fixed top-0 flex justify-between items-center bg-gray-900 h-16 rounded-b-3xl px-8 py-4 md:w-700 -mt-1 border border-red-400\">\r\n          {/* Left */}\r\n          <button onClick={setNavbarstatus} className=\"w-8 h-8 text-center\">\r\n            <img src={logo} alt=\"Logo\"></img>\r\n          </button>\r\n          {/* Right */}\r\n          <div className=\"flex justify-end items-center\">\r\n            <div className=\"pl-8\">\r\n              <Toggle />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n","import moment from \"moment\";\n\nexport let featured = [\n  {\n    title: \"Software Engineer Salary in 2020\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"money.jpg\",\n  },\n  {\n    title: \"GraphQL vs Rest\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"React\", \"JavaScript\"],\n    link: \"#\",\n    image: \"graph.jpg\",\n  },\n  {\n    title: \"A Day in the Life of a Programmer\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"programmer.jpg\",\n  },\n  {\n    title: \"Brain Hacks for Learning to Program\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Personal Betterment\"],\n    link: \"#\",\n    image: \"neuron.jpg\",\n  },\n  {\n    title: \"Eat, Sleep, Code, Repeat?\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"tired.jpg\",\n  },\n  {\n    title: \"Monkey See Monkey Do?\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"tired.jpg\",\n  },\n];\n","import moment from \"moment\";\n\nexport let trending = [\n  {\n    title: \"Can Anyone Code?\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"money.jpg\",\n  },\n  {\n    title: \"Using AWS S3 for Storing Blog Images\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"React\", \"JavaScript\"],\n    link: \"#\",\n    image: \"graph.jpg\",\n  },\n  {\n    title: \"Popular Programming Languages in 2020\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"code.jpg\",\n  },\n  {\n    title: \"Objects and Arrays: A Practical Guide\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Personal Betterment\"],\n    link: \"#\",\n    image: \"banana.jpg\",\n  },\n  {\n    title: \"Grids & Flexbox For Noobs\",\n    date: moment().format(\"MMMM DD, YYYY\"),\n    categories: [\"Tech Culture\"],\n    link: \"#\",\n    image: \"grid.jpg\",\n  },\n];\n","import React from \"react\";\nimport { TagRow } from \"./\";\nimport \"../../styles/scss/masonryPost.scss\";\n\nexport default function MasonaryPost({ post, tagsOntop }) {\n  const imageBackground = {\n    backgroundPosition: `left top`,\n    borderRadius: `15px`,\n    padding: \"2px\",\n    backgroundImage: `url(\"${\n      require(`../../assets/images/${post.image}`).default\n    }\")`,\n  };\n\n  const style = { ...imageBackground, ...post.style, ...post.style };\n\n  return (\n    <main className=\"masonry-post bg-clip-content\" style={style}>\n      <a href={post.link} className=\"bg-light-blue-600 bg-opacity-50\">\n        <div className=\"image-text\">\n          <h2 className=\"p-2 bg-blue-800 bg-opacity-50 font-semibold\">\n            {post.title}\n          </h2>\n          <span className=\"image-date pl-2 text-white\">{post.date}</span>\n          <TagRow tags={post.categories} />\n        </div>\n      </a>\n    </main>\n  );\n}\n","import React from \"react\";\nimport { MasonryPost } from \"./\";\nimport \"../../styles/scss/postMasonry.scss\";\n\nconst PostMasonry = ({ posts, columns, tagsOnTop }) => {\n  const style = {\n    gridTemplateColumns: `repeat(${columns}, minxmax(275px, 1fr))`,\n  };\n\n  return (\n    <section className=\"mt-4 masonry\" style={style}>\n      {posts.map((post, index) => (\n        <MasonryPost {...{ post, index, tagsOnTop, key: index }} />\n      ))}\n    </section>\n  );\n};\n\nexport default PostMasonry;\n","import React, { useState, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Pagination } from \"antd\";\nimport { TagRow } from \"./\";\nimport \"../../styles/scss/postGrid.scss\";\n\nexport default function PostGrid({ posts }) {\n  const [pageSize, setPageSize] = useState(9);\n  const [current, setCurrent] = useState(1);\n\n  const paginatedPosts = useMemo(() => {\n    const lastIndex = current * pageSize;\n    const firstIndex = lastIndex - setPageSize;\n\n    return posts.slice(firstIndex, lastIndex);\n  }, [posts, current, pageSize]);\n\n  return (\n    <section>\n      {paginatedPosts.map((post, index) => (\n        <div className=\"post-container my-4\">\n          <h2 className=\"p-2 bg-blue-800 bg-opacity-50 font-semibold rounded-t-md\">\n            {post.title}\n          </h2>\n          <span className=\"image-date pl-2 text-white\">{post.date}</span>\n          <figure>\n            <Link to={post.link}>\n              <TagRow tags={post.categories} />\n              <img\n                src={require(`../../assets/images/${post.image}`).default}\n                alt={post.image}\n                className=\"post-grid-image rounded-lg\"\n              />\n            </Link>\n          </figure>\n        </div>\n      ))}\n      <Pagination\n        simple\n        showSizeChanger\n        onShowSizeChange={setPageSize}\n        pageSize={pageSize}\n        total={posts.length}\n        defaultCurrent={current}\n        onChange={setCurrent}\n        className=\"test flex justify-end font-bold\"\n      />\n    </section>\n  );\n}\n","const categoryColors = {\n  \"Tech Culture\": \"rgb(255,59,48)\",\n  \"Tech News\": \"rgb(0,113,164)\",\n  \"Personal Betterment\": \"rgb(255,45,85)\",\n  Vue: \"rgb(62,199,89)\",\n  React: \"rgb(64,156,255)\",\n  JavaScript: \"rgb(255,179,64)\",\n  Cloud: \"rgb(175,82,250\",\n};\n\nexport { categoryColors };\n","import React from \"react\";\nimport { categoryColors } from \"./styles\";\n\nexport default function TagRow({ tags }) {\n  const test = () => {\n    console.log(tags);\n  };\n\n  test();\n  return (\n    <div className=\"tagRow p-1\">\n      {tags.map((tag, index) => (\n        <span\n          key={index}\n          className=\"tag p-1 text-xs font-medium m-1 rounded\"\n          style={{ backgroundColor: categoryColors[tag] }}\n        >\n          {tag.toUpperCase()}\n        </span>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { featured } from \"../../mocks/featured\";\r\nimport { trending } from \"../../mocks/trending\";\r\nimport { PostMasonry, MasonryPost, PostGrid } from \"../../components/common\";\r\nimport \"../../styles/app.css\";\r\nimport \"../../styles/scss/home.scss\";\r\n\r\nconst trendingConfig = {\r\n  0: {\r\n    gridArea: \"1 / 1/ 2 / 3\",\r\n    height: \"300px\",\r\n  },\r\n  1: {\r\n    height: \"300px\",\r\n  },\r\n  3: {\r\n    height: \"630px\",\r\n    marginLeft: \"30px\",\r\n    width: \"630px\",\r\n  },\r\n};\r\n\r\nconst featuredConfig = {\r\n  0: {\r\n    gridArea: \"1 / 1/ 2 / 3\",\r\n    height: \"300px\",\r\n  },\r\n  1: {\r\n    height: \"300px\",\r\n  },\r\n  3: {\r\n    height: \"630px\",\r\n    marginLeft: \"30px\",\r\n    width: \"630px\",\r\n  },\r\n};\r\n\r\nconst mergeStyles = function (posts, config) {\r\n  posts.forEach((post, index) => {\r\n    // post.style = config[index];\r\n    post.author = \"Andrew Kraus\";\r\n    post.description = \"Lorem ipsum dolar sit amet, consecetur etc. etc. etc.\";\r\n    // console.log(post);\r\n  });\r\n};\r\n\r\nconst recentPosts = [...trending, ...featured, ...featured];\r\n\r\nmergeStyles(featured, featuredConfig);\r\nmergeStyles(trending, trendingConfig);\r\n\r\n// const lastPost = featured.pop()\r\nconst lastFeatured = featured.pop();\r\n\r\nexport default function Home() {\r\n  return (\r\n    <main>\r\n      <section className=\"container\">\r\n        <div>\r\n          <section className=\"flex flex-col mt-20\">\r\n            <MasonryPost post={lastFeatured} tagsOnTop={true} columns={3} />\r\n            <PostMasonry posts={featured} tagsOnTop={true} columns={3} />\r\n          </section>\r\n        </div>\r\n      </section>\r\n      <section className=\"container\">\r\n        <div>\r\n          <section className=\" \">\r\n            <PostGrid posts={recentPosts} />\r\n          </section>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/headshot.70f9c8ef.jpg\";","import logo from \"../../assets/logo.png\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"flex mt-auto w-full px-4 md:w-700 text-gray-200\">\r\n      <div className=\"h-16 flex items-center justify-center border-t-2 border-red-400 min-w-full  bg-gray-900\">\r\n        <div className=\"text-sm font-medium z-10\">2024 CozyCampus</div>\r\n        <img className=\"h-6 m-4\" src={logo} alt=\"Logo\"></img>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport headshot from \"../../assets/headshot.jpg\";\r\nimport \"../../styles/scss/blog.scss\";\r\nimport \"../../styles/app.css\";\r\nimport Footer from \"../../components/common/footer\";\r\n\r\nconst About = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"flex flex-col items-center text-copy-primary min-h-screen\">\r\n      <div className=\"flex flex-col leading-7 md:leading-8 text-base md:text-lg\">\r\n        <div className=\"md:w-700 space-y-4 pt-32 px-8\">\r\n          <h1 className=\"text-2xl md:text-5xl font-bold\">About</h1>\r\n          <p className=\"italic text-red-400\">June 5th, 2022</p>\r\n          <div className=\"border-b border-red-400\"></div>\r\n          {/* Headline */}\r\n          <h2 className=\"text-2xl font-bold pt-4\">Welcome to CozyCampus!</h2>\r\n          <p className=\"md:text-xl leading-7 md:leading-8 mt-12 italic\">\r\n            My name is Andrew Kraus and I enjoy all things tech and design. I\r\n            have learned most of what I know on those subjects from strangers on\r\n            the internet and mostly for free. To return the favor, I've built\r\n            this dark and cozy corner of the web.\r\n          </p>\r\n          <p>\r\n            CozyCampus is meant to be educational, is designed for readers, and\r\n            its content will include subjects such as web development, web\r\n            design, user experience, cybescurity, networking, linux, and more.\r\n          </p>\r\n          <p>\r\n            So, grab a cup of coffee and get comfy!{\" \"}\r\n            <i className=\"fas fa-mug-hot text-gray-700\"></i>\r\n          </p>\r\n          <div className=\"block border-b border-red-400\"></div>\r\n          <h2 className=\"text-2xl font-bold pt-4\">About the Writer</h2>\r\n          <p>\r\n            Understanding the intersection of business, people, and technology\r\n            requires a good mix of hard and soft skills and a lot of practice.\r\n            Eighteen years into my career and I've worked in tech as a reseller,\r\n            a network architect, a manufacturer representative, and, most\r\n            recently, a software engineer. My employers have been some of the\r\n            largest and most storied in the business (IBM) to some of the\r\n            smaller/more niche players vying to make their mark (Convr).\r\n          </p>\r\n          <p>\r\n            Like my experience, my skills are diverse, but the common threads\r\n            throughout are my desire to problem solve, the satisfaction I get\r\n            from helping others, and, of course, my love of technology. Thanks\r\n            for stopping by!\r\n          </p>\r\n          {/* Contact Details */}\r\n          <div className=\"flex items-center space-x-4 pt-4 pb-8\">\r\n            <img\r\n              src={headshot}\r\n              className=\"rounded-full h-16 w-16\"\r\n              alt=\"Logo\"\r\n            ></img>\r\n            <div className=\"flex flex-col\">\r\n              <h2 className=\"font-bold \">Andrew Kraus</h2>\r\n              <div className=\"space-x-2\">\r\n                {/* LinkedIn */}\r\n                <a\r\n                  href=\"https://www.linkedin.com/in/andrewkraus/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  className=\"hover:text-red-400 text-gray-700\"\r\n                >\r\n                  <i className=\"fab fa-linkedin\"></i>\r\n                </a>\r\n                {/* GitHub */}\r\n                <a\r\n                  href=\"https://github.com/brokenhoax/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  className=\"hover:text-red-400 text-gray-700\"\r\n                >\r\n                  <i className=\"fab fa-github\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer></Footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/scss/blog.scss\";\r\nimport \"../../styles/app.css\";\r\nimport headshot from \"../../assets/headshot.jpg\";\r\n\r\nconst Blog = () => {\r\n  const posts = [\r\n    {\r\n      title: \"Dark Mode\",\r\n      date: \"5-5-2021\",\r\n      length: {\r\n        minutes: \"5\",\r\n        seconds: \"00\",\r\n      },\r\n      icon: \"fas fa-mug-hot\",\r\n      mugs: 1,\r\n      tagline: \"Dark mode is stupid easy.\",\r\n      path: \"/Solving_The_Syndrome/blog/dark-mode\",\r\n    },\r\n    {\r\n      title: \"React Components\",\r\n      date: \"5-5-2021\",\r\n      length: {\r\n        minutes: \"5\",\r\n        seconds: \"00\",\r\n      },\r\n      icon: \"fas fa-mug-hot\",\r\n      mugs: 1,\r\n      tagline: \"DRY your code with React components.\",\r\n      path: \"/Solving_The_Syndrome/blog/react-components\",\r\n    },\r\n    {\r\n      title: \"Figma Slider\",\r\n      date: \"7-14-2022\",\r\n      length: {\r\n        minutes: \"15\",\r\n        seconds: \"00\",\r\n      },\r\n      icon: \"fas fa-mug-hot\",\r\n      mugs: 3,\r\n      tagline: \"Create a slider in Figma.\",\r\n      path: \"/Solving_The_Syndrome/blog/figma-slider\",\r\n    },\r\n    {\r\n      title: \"Ready Set Go\",\r\n      date: \"6-3-2021\",\r\n      length: {\r\n        minutes: \"10\",\r\n        seconds: \"00\",\r\n      },\r\n      icon: \"fas fa-mug-hot\",\r\n      mugs: 2,\r\n      tagline: \"Publish your app with GitHub Pages.\",\r\n      path: \"/Solving_The_Syndrome/blog/ready-set-go\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src =\r\n      \"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?lang=js&amp;skin=desert\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <section\r\n      id=\"blog\"\r\n      className=\"flex justify-center items-start min-h-screen pt-32\"\r\n    >\r\n      <div className=\"flex flex-col px-8 md:w-700\">\r\n        {/* Author Data */}\r\n        <div className=\"flex items-center justify-start pb-6\">\r\n          <img\r\n            src={headshot}\r\n            className=\"rounded-full h-16 w-16\"\r\n            alt=\"Logo\"\r\n          ></img>\r\n          <div className=\"ml-4 font-semibold text-base\">\r\n            <div>Andrew Kraus</div>\r\n            <div className=\"pb-0.5 text-red-400\">@brokenhoax</div>\r\n          </div>\r\n        </div>\r\n        {/* Posts */}\r\n        <ul className=\"flex flex-col items-start\">\r\n          {posts.map((post, index) => (\r\n            <li className=\"mb-2 w-full pt-8\" key={index}>\r\n              <Link\r\n                to={post.path}\r\n                className=\"min-w-full text-2xl md:text-4xl font-semibold hover:text-red-400\"\r\n              >\r\n                {/* Title */}\r\n                <div className=\"font-bold\">{post.title}</div>\r\n                <div className=\"flex items-center justify-between text-sm md:text-lg\">\r\n                  {/* Tagline */}\r\n                  <div className=\"text-red-400\">{post.tagline}</div>\r\n                  {/* Minutes */}\r\n                  <div className=\"flex items-center\">\r\n                    <i className={`${post.icon} px-2`}></i>\r\n                    <p>{post.length.minutes} mins</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-sm font-semibold\">{post.date}</div>\r\n              </Link>\r\n              <hr className=\"mt-8 border-b border-gray-800\"></hr>\r\n            </li>\r\n          ))}\r\n          <li></li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import React from \"react\";\r\nimport \"../../styles/scss/blog.scss\";\r\nimport \"../../styles/app.css\";\r\n\r\nconst DarkMode = () => {\r\n  return (\r\n    <section className=\"flex flex-col items-center pt-32 min-h-screen\">\r\n      <div className=\"w-full md:w-700 px-8\">\r\n        <h1 className=\"self-center text-5xl font-bold mb-2\">\r\n          Dark Mode is Stupid Easy\r\n        </h1>\r\n        <h2 className=\"italic text-red-400\">June 20th, 2024</h2>\r\n        <p className=\"text-xl my-8 leading-10 mt-12\">...</p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DarkMode;\r\n","import React, { useEffect } from \"react\";\r\nimport \"../../styles/scss/blog.scss\";\r\nimport \"../../styles/app.css\";\r\nimport kungfoo from \"../../assets/images/kung-foo.jpg\";\r\nimport Footer from \"../../components/common/footer\";\r\n\r\nconst IKnowKungFoo = () => {\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src =\r\n      \"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?lang=js&amp;skin=desert\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n  }, []);\r\n  return (\r\n    <section className=\"flex flex-col items-center pt-32\">\r\n      <div className=\"w-full md:w-700 px-8\">\r\n        <h1 className=\"self-center text-5xl font-bold mb-2\">I Know Kung Foo</h1>\r\n        <h2 className=\"italic text-red-400\">March 5th, 2021</h2>\r\n        <div className=\"flex flex-col items-center pt-8\">\r\n          <img src={kungfoo} alt=\"Application\" className=\"rounded-lg\"></img>\r\n        </div>\r\n        <p className=\"text-xl my-8 leading-10 mt-12\">\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus eum\r\n          voluptatem commodi. Assumenda voluptatum autem explicabo, cupiditate\r\n          nemo esse ex rem voluptates beatae ullam qui magni dignissimos totam\r\n          eius enim est illum numquam repellat molestiae doloremque alias\r\n          sapiente obcaecati? Alias laboriosam cupiditate sint mollitia aliquam?\r\n          Qui ipsa inventore ex reiciendis.\r\n        </p>\r\n        <p className=\"text-xl my-8 leading-10\">\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Iste vitae\r\n          deleniti nemo corporis magnam provident voluptas aspernatur laborum\r\n          veniam maxime mollitia harum pariatur sint, doloribus blanditiis,\r\n          libero et voluptate. Consequatur corporis delectus amet, sint odio\r\n          consequuntur quia quo exercitationem esse totam pariatur neque iusto\r\n          eum unde harum aspernatur distinctio non.\r\n        </p>\r\n        <p className=\"text-xl my-8 leading-10\">\r\n          Fast-forward to 2021, and\r\n          <a href=\"https://neuralink.com/\" className=\"text-red-400\">\r\n            {\" \"}\r\n            we're getting closer to making that a reality.\r\n          </a>{\" \"}\r\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eos quis\r\n          deleniti illum est optio voluptas eius explicabo nisi dolorum tempore\r\n          ipsa, deserunt quod quo, magnam consectetur adipisci veniam eum. Sint,\r\n          possimus incidunt. Repudiandae, nostrum aliquam. Inventore in culpa\r\n          quibusdam esse a excepturi quasi, rerum eum at, fugiat quas eligendi\r\n          autem quidem dolores porro dignissimos ipsa impedit fugit cumque.\r\n          Esse, vero?\r\n        </p>\r\n        <p className=\"text-xl my-8 leading-10\">\r\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sint ipsum\r\n          magnam minima illum. In id nemo earum quis culpa dolor minima quia.\r\n          Esse laboriosam accusantium quisquam eveniet dolorum exercitationem\r\n          officiis illum, ab consectetur non. Minus minima nihil magni, debitis\r\n          iure aliquid itaque eligendi ratione ab beatae porro ducimus fuga\r\n          dolores.\r\n        </p>\r\n        <div className=\"flex flex-col items-center\">\r\n          <pre className=\"w-full text-sm prettyprint text-red-400 bg-gray-900 leading-10 rounded-lg overflow-auto\">\r\n            {`\r\n    function life() {\r\n        let chance = Math.floor(Math.random() * 10) + 1;\r\n        if ( chance > 5 ) {\r\n          return console.log (\"You live!\") \r\n        } else {\r\n          return console.log (\"You die!\")\r\n        }\r\n    }\r\n              `}\r\n          </pre>\r\n        </div>\r\n        <p className=\"text-xl my-8 leading-10\">\r\n          Lorem ipsum dolor sit amet consectetur, adipisicing elit.\r\n          Consequuntur, cum soluta nostrum sequi neque laborum esse ad libero\r\n          placeat aliquam hic nesciunt omnis assumenda ab autem aliquid nulla\r\n          eveniet unde itaque repellendus vel iste reprehenderit? Perspiciatis\r\n          eum vero eaque fugit, quidem reiciendis iste, harum nobis error soluta\r\n          totam odio assumenda voluptatum ullam qui. Dolorem quos esse suscipit\r\n          aut excepturi aliquid?\r\n        </p>\r\n        <p className=\"text-xl my-8 leading-10\">\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim\r\n          perspiciatis rem odio ad delectus, dolore repellat dolores autem\r\n          exercitationem facilis reiciendis ratione, debitis eligendi doloremque\r\n          mollitia pariatur dignissimos doloribus. Libero ut eligendi facere\r\n          odit eos eaque labore tenetur fugit vel soluta id nostrum quis,\r\n          tempore cum deleniti! Vel ipsa quos quaerat veniam molestiae quam!\r\n          Iusto numquam adipisci ea nesciunt quaerat minus non aperiam, in ipsum\r\n          ullam, praesentium harum illum veniam! Lorem ipsum dolor sit amet\r\n          consectetur adipisicing elit. Voluptatem nihil facere maxime\r\n          distinctio impedit, officiis dolor excepturi ab placeat ad!\r\n        </p>\r\n      </div>\r\n      <Footer></Footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default IKnowKungFoo;\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Image(props) {\r\n  const [image, showImage] = useState(true);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center pt-4\">\r\n      {image && (\r\n        <button className=\"\">\r\n          <img\r\n            onClick={() => showImage((image) => !image)}\r\n            className=\"rounded-md inline-flex items-center justify-center w-1/2\"\r\n            src={props.image}\r\n            alt={props.message}\r\n          ></img>\r\n        </button>\r\n      )}\r\n      {!image && (\r\n        <button className=\"\">\r\n          <img\r\n            onClick={() => showImage((image) => !image)}\r\n            className=\"rounded-md\"\r\n            src={props.image}\r\n            alt={props.message}\r\n          ></img>\r\n        </button>\r\n      )}\r\n      <button\r\n        onClick={() => showImage((image) => !image)}\r\n        className=\"flex items-center py-2 space-x-2\"\r\n      >\r\n        <i className={`fas fa-camera ${image ? \"text-lg\" : \"text-sm\"}`}></i>\r\n        <div className={`${image ? \"text-sm\" : \"text-xs\"}`}>\r\n          {props.message}\r\n        </div>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { HashLink } from \"react-router-hash-link\";\r\nimport \"../../styles/scss/blog.scss\";\r\nimport \"../../styles/app.css\";\r\nimport prototype from \"../../assets/images/slider.png\";\r\nimport slider_handle from \"../../assets/images/slider_handle.png\";\r\nimport slider_bar from \"../../assets/images/slider_bar.png\";\r\nimport interactions from \"../../assets/images/interactions.png\";\r\nimport constraint_full from \"../../assets/images/constraints_full.png\";\r\nimport constraint_half from \"../../assets/images/constraints_half.png\";\r\nimport constraint_zero from \"../../assets/images/constraints_zero.png\";\r\nimport Footer from \"../../components/common/footer\";\r\nimport Image from \"../../components/common/image\";\r\n\r\nconst FigmaSlider = () => {\r\n  return (\r\n    <section className=\"flex flex-col items-center leading-6 md:leading-8 text-base md:text-lg pt-32 min-h-screen\">\r\n      <div className=\"w-full md:w-700 px-8 pb-16 space-y-8\">\r\n        {/* Title */}\r\n        <div className=\"space-y-4\">\r\n          <h1 className=\"self-center text-3xl md:text-5xl font-bold\" id=\"title\">\r\n            Figma Slider\r\n          </h1>\r\n          <div className=\"italic text-red-400\">June 8th, 2022</div>\r\n          <div className=\"border-b border-red-400\"></div>\r\n          <p className=\"text-base md:text-xl mt-12 font-normal italic\">\r\n            I'm working on a mockup for a new feature at work and I've been\r\n            asked to include a slider that allows a user to change \"synonym\r\n            sensitivity\" on a scale from zero to one. I figured building a\r\n            slider in Figma would be a worthy challenge and one worth sharing.\r\n            What's more, this tutorial will expose you to the Figma concepts of\r\n            components/variants, constraints, interactions, and basic styling.\r\n            Let's jump in!\r\n          </p>\r\n          {/* Slider Image */}\r\n          <Image image={prototype} message=\"Figma slider\"></Image>\r\n        </div>\r\n        {/* Table of Contents */}\r\n        <div>\r\n          <div className=\"border-b border-red-400\"></div>\r\n          <h2 id=\"toc\" className=\"text-xl md:text-3xl font-semibold pt-6 pb-4\">\r\n            Table of Contents\r\n          </h2>\r\n          <ol className=\"list-decimal pb-6 pl-8 space-y-2 md:text-xl font-medium\">\r\n            <li>\r\n              <HashLink\r\n                className=\"text-red-400 hover:text-red-300\"\r\n                scroll={(el) =>\r\n                  el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n                }\r\n                to=\"/Solving_The_Syndrome/blog/figma-slider#components-and-variants\"\r\n              >\r\n                Components and Variants\r\n              </HashLink>\r\n            </li>\r\n            <li>\r\n              <HashLink\r\n                className=\"text-red-400 hover:text-red-300\"\r\n                scroll={(el) =>\r\n                  el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n                }\r\n                to=\"/Solving_The_Syndrome/blog/figma-slider#slider-handle\"\r\n              >\r\n                Slider Handle\r\n              </HashLink>\r\n            </li>\r\n            <li>\r\n              <HashLink\r\n                className=\"text-red-400 hover:text-red-300\"\r\n                scroll={(el) =>\r\n                  el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n                }\r\n                to=\"/Solving_The_Syndrome/blog/figma-slider#slider-bar\"\r\n              >\r\n                Slider Bar\r\n              </HashLink>\r\n            </li>\r\n            <li>\r\n              <HashLink\r\n                className=\"text-red-400 hover:text-red-300\"\r\n                scroll={(el) =>\r\n                  el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n                }\r\n                to=\"/Solving_The_Syndrome/blog/figma-slider#interactions\"\r\n              >\r\n                Interactions\r\n              </HashLink>\r\n            </li>\r\n            <li>\r\n              <HashLink\r\n                className=\"text-red-400 hover:text-red-300\"\r\n                scroll={(el) =>\r\n                  el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n                }\r\n                to=\"/Solving_The_Syndrome/blog/figma-slider#constraints\"\r\n              >\r\n                Constraints\r\n              </HashLink>\r\n            </li>\r\n          </ol>\r\n          <div className=\"border-b border-red-400\"></div>\r\n        </div>\r\n        {/* Components and Variants */}\r\n        <div className=\"space-y-4\">\r\n          <h2\r\n            id=\"components-and-variants\"\r\n            className=\"text-2xl md:text-3xl font-semibold\"\r\n          >\r\n            Components and Variants{\" \"}\r\n            <span className=\"text-2xl md:text-3xl text-red-400 pl-1\">\r\n              {\" \"}\r\n              <HashLink\r\n                scroll={(el) =>\r\n                  el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n                }\r\n                to=\"/Solving_The_Syndrome/blog/figma-slider#title\"\r\n              >\r\n                #\r\n              </HashLink>\r\n            </span>\r\n          </h2>\r\n          <p>\r\n            If you think about where you've encountered a slider on the web, you\r\n            might recall that a typical slider consists of three parts: a\r\n            handle, a bar, and some scale indicators. Most sliders increment in\r\n            single digits or, at the most, no more than two decimal points, but\r\n            to build out such a granular slider in Figma wouldn't be practical\r\n            because, well, we don't build apps in Figma we build prototypes of\r\n            apps (which means they don't have to be perfect representations of\r\n            the real thing).\r\n          </p>\r\n          <p>\r\n            That said, we'll be building three sliders in this tutorial in order\r\n            for the slider to, well, slide! The first slider will represent the\r\n            slider if it were at the lowest point of the scale—in our case zero\r\n            or “0”. The second slider will represent the slider at half scale\r\n            (0.5) and the third at full scale (1). We'll create a slider\r\n            “Component” which has three “Variants” each representing one of our\r\n            three slider states of “zero”, “half”, and “full”. Before we start\r\n            building our slider, let's give it a home to live within Figma.\r\n            Let's create a new frame and call it “slider”.\r\n          </p>\r\n        </div>\r\n        <div className=\"block border-b border-gray-700\"></div>\r\n        {/* Slider Handle */}\r\n        <div className=\"flex flex-col space-y-4\">\r\n          <h2 id=\"slider-handle\" className=\"text-2xl md:text-3xl font-semibold\">\r\n            Slider Handle{\" \"}\r\n            <span className=\"text-2xl md:text-3xl text-red-400 pl-1\">\r\n              {\" \"}\r\n              <HashLink\r\n                smooth\r\n                to=\"/Solving_The_Syndrome/blog/figma-slider#title\"\r\n              >\r\n                #\r\n              </HashLink>\r\n            </span>\r\n          </h2>\r\n          <p>\r\n            Now that we know what we're building and where it should live, let's\r\n            work on the first piece of our slider—the slider handle:\r\n          </p>\r\n          {/* Slider Handle Image */}\r\n          <Image image={slider_handle} message=\"Figma slider handle\"></Image>\r\n          <p>\r\n            Our handle will be a simple circle shape handle consisting of two\r\n            circles: a big, outer circle and a smaller, inner circle for added\r\n            style. We'll kick things off in Figma by creating a circle shape\r\n            with a width and height of 32 x 32 pixels and a color of dark blue.\r\n            Our inner circle will be white with a measurement of 16 x 16 pixels.\r\n            We'll place the inner circle directly in the center of the larger\r\n            circle and we'll frame them together by selecting both and clicking\r\n            “Frame Selection”. Let's name that frame “handle”, drag it into our\r\n            “slider” frame, and we can move on to adding our slider bar.\r\n          </p>\r\n        </div>\r\n        {/* Slider Bar */}\r\n        <div className=\"space-y-4\">\r\n          <h2 id=\"slider-bar\" className=\"text-2xl md:text-3xl font-semibold\">\r\n            Slider Bar{\" \"}\r\n            <span className=\"text-2xl md:text-3xl text-red-400 pl-1\">\r\n              {\" \"}\r\n              <HashLink\r\n                smooth\r\n                to=\"/Solving_The_Syndrome/blog/figma-slider#title\"\r\n              >\r\n                #\r\n              </HashLink>\r\n            </span>\r\n          </h2>\r\n          <Image image={slider_bar} message=\"Figma slider bar\"></Image>\r\n          <p>\r\n            Next up is the slider bar which we'll have positioned horizontally\r\n            with the zero scale indicator on the left and the one scale\r\n            indicator on the right. Now, creating the slider bar is a bit\r\n            deceiving in Figma because the bar should look different for each of\r\n            our states. Our empty state will have a single, light-blue colored\r\n            slider bar with the slider handle all the way to the left. Our half\r\n            state will have two bars of equal length with the slider handle in\r\n            the center of the two. Our full state will have a single, dark-blue\r\n            colored slider bar with the slider handle to the far right.\r\n          </p>\r\n          <p>\r\n            Why the different colors? When the user moves the slider from empty\r\n            to half we need to indicate to the user that we're incrementing the\r\n            scale. We can do that with our slider indicators but we also want to\r\n            make this more visually obvious (and interesting) by using color.\r\n            The respective colored bars indicate to the user that the slider is\r\n            incrementing the scale when the handle is moved from left to right\r\n            and right to left.\r\n          </p>\r\n          <p>\r\n            We can make our slider bars any length but each variant's slider bar\r\n            length should be uniform. Let's go with 256 pixels which means that,\r\n            for our half-state slider the dark-blue slider bar will be 128px and\r\n            the light-blue slider bar will be 128px for a total of 256 pixels.\r\n            Since we're starting with an empty state slider we'll just create\r\n            one slider bar with a color of light-blue and a width of 256px.\r\n            We'll now place our slider handle center and to the far left of our\r\n            slider bar and we'll select both the slider bar and handle and put\r\n            them in a frame. We'll then turn that frame into a component which\r\n            we'll name “empty”. Once we have our Figma component, we can create\r\n            two additional variants which we'll call “half” and “full”. You'll\r\n            notice that these variants are identical to our default “empty”\r\n            variant, so we'll need to make some tweaks to make each variant\r\n            represent their respective states. Don't forget to add two slider\r\n            bars for our “half” state!\r\n          </p>\r\n        </div>\r\n        {/* Interactions */}\r\n        <div className=\"space-y-4\">\r\n          <h2 id=\"interactions\" className=\"text-2xl md:text-3xl font-semibold\">\r\n            Interactions{\" \"}\r\n            <span className=\"text-2xl md:text-3xl text-red-400 pl-1\">\r\n              {\" \"}\r\n              <HashLink\r\n                smooth\r\n                to=\"/Solving_The_Syndrome/blog/figma-slider#title\"\r\n              >\r\n                #\r\n              </HashLink>\r\n            </span>\r\n          </h2>\r\n          <Image\r\n            image={interactions}\r\n            message=\"Figma slider interactions\"\r\n          ></Image>\r\n          <p>\r\n            Now that we've built our slider component and variants, let's\r\n            discuss how we'll make our slider interactive. Since we aren't\r\n            writing code in Figma, we have to first think about how we can\r\n            accomplish this with animations or, as Figma calls them,\r\n            “interactions”. So what type of interaction would we use in Figma to\r\n            make our slider functional? Typical interactions that a user might\r\n            have with a web app include clicking their mouse or typing with\r\n            their keyboard; however, a typical slider interaction involves a\r\n            user clicking on the slider handle and dragging the slider\r\n            horizontally or vertically to increase or decrease the scale as is\r\n            indicated by the slider scale indicators. Luckily for us, Figma has\r\n            an “on-drag” interaction that we can use.{\" \"}\r\n          </p>\r\n          <p>\r\n            Now we need to think about what happens when a user clicks the\r\n            slider handle and drags it. If the “dragging” action is the cause,\r\n            then what's the effect? In our case, we'll choose “Change To” as the\r\n            effect of the user dragging the slider and our “change to” effect\r\n            will point to the next logical slider variant. For instance, if a\r\n            user was to click and drag the slider handle on our empty state\r\n            slider then our Figma interaction would logically “change to” our\r\n            next slider variant of “half”. If the user continued to drag the\r\n            slider handle from the “half” state further up the slider scale,\r\n            then we should set the “change to” action to change from the “half”\r\n            state to the “full” state. Obviously, this interaction wouldn't be\r\n            as smooth as a real slider since the slider, in our case, can only\r\n            be in three positions, but it gets the point across and, if you\r\n            really have the time, you can choose to make more variants that go\r\n            win smaller increments (such as in increments of .10 ranging from 0\r\n            to 1. For the purposes of this tutorial, we'll keep things simple.\r\n          </p>\r\n        </div>\r\n        {/* Constraints */}\r\n        <div className=\"space-y-4\">\r\n          <h2 id=\"constraints\" className=\"text-2xl md:text-3xl font-semibold\">\r\n            Constraints{\" \"}\r\n            <span className=\"text-2xl md:text-3xl text-red-400 pl-1\">\r\n              {\" \"}\r\n              <HashLink\r\n                smooth\r\n                to=\"/Solving_The_Syndrome/blog/figma-slider#title\"\r\n              >\r\n                #\r\n              </HashLink>\r\n            </span>\r\n          </h2>\r\n          <p>\r\n            Our sliders look really good but there's a few problems we haven't\r\n            considered yet and that's reusability and responsiveness. If we want\r\n            to use this slider in our app then we can simply drop it in as is,\r\n            but what if we want to make it bigger? Or, perhaps we're fine with\r\n            the size of the slider but what if whomever is reviewing our\r\n            prototype wants to shrink or grow their size of their viewport\r\n            (screen)? What effect will that have on our slider? Unfortunately,\r\n            because we haven't set any constraints on the pieces of our slider\r\n            we cannot expect it to maintain the positioning of each part of the\r\n            slider and we can expect our slider to get distorted if the size of\r\n            it, or the user's viewport, is changed.\r\n          </p>\r\n          <p>\r\n            With Figma's “constraints” feature we can set constraints on the\r\n            slider bar(s), handle, and even the frames that encapsulate the\r\n            pieces of our slider. When it comes to constraints all you need to\r\n            know is that the constraints applied to the Figma object are\r\n            relative to its parent object. For instance, with our slider handle,\r\n            the inner circle is the child object and the outer circle it lives\r\n            within is its parent object. Furthermore, the outer circle's parent\r\n            object is the frame that it lives within.\r\n          </p>\r\n          <p>\r\n            That said, for our empty state, our slider bar will have its\r\n            horizontal constraint set to “left and right” and a vertical\r\n            constraint set to “top and bottom”. Our empty state's slider handle\r\n            frame will have a horizontal constraint of “left” and a vertical\r\n            constraint of “top and bottom”. Our empty state slider handle outer\r\n            circle will have a horizontal constraint of “left” and a vertical\r\n            constraint of “top and bottom” and our empty state slider handle\r\n            inner circle will have a horizontal and vertical constraint both set\r\n            to “center”.\r\n          </p>\r\n          {/* Empty Slider Constraints */}\r\n          <Image\r\n            image={constraint_zero}\r\n            message=\"Figma empty slider constraints\"\r\n          ></Image>\r\n          <p>\r\n            Our half state's constraints is probably the trickiest part of this\r\n            Figma project. Both slider bars will have a horizontal constraint of\r\n            “scale” and a vertical constraint of “top and bottom”. Our slider\r\n            handle frame will have a horizontal constraint of “center” so that\r\n            it maintains its centered position on the slider bar and a vertical\r\n            constraint of “top and bottom”. Our outer circle will have a\r\n            horizontal constraint of “left and right” and a vertical constraint\r\n            of “center” and our inner circle will maintain the same “center /\r\n            center” constraints as was described above.\r\n          </p>\r\n          {/* Half Slider Constraints */}\r\n          <Image\r\n            image={constraint_half}\r\n            message=\"Figma half slider constraints\"\r\n          ></Image>\r\n          <p>\r\n            Last but not least, our full state's constraints are similar to our\r\n            empty state's constraints but inverted for the slider handle frame.\r\n            So, our slider bar will have a horizontal constraint of “left and\r\n            right” and a vertical constraint of “top and bottom” whereas the\r\n            slider handle frame will have a horizontal constraint of “right” and\r\n            a vertical constraint of “top and bottom”. Our slider handle outer\r\n            circle will have a horizontal constraint of “top and bottom” and a\r\n            vertical constraint of “left and right” and our inner circle will\r\n            have a horizontal and vertical constraint both set to “center”.\r\n          </p>\r\n          {/* Half Slider Constraints */}\r\n          <Image\r\n            image={constraint_full}\r\n            message=\"Figma full slider constraints\"\r\n          ></Image>\r\n          <p>\r\n            It took me a little while to understand how constraints worked and I\r\n            came to a better understanding by trying different settings and\r\n            testing their effect. So, change one or two constraints, grab the\r\n            variant frame and shrink and grow it to see what happens. Viola! Our\r\n            slider prototype is now ready to be demonstrated. Pat yourself on\r\n            the back, grab another cup of coffee, and let's go! 🎉\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Footer></Footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FigmaSlider;\r\n\r\n// reduced from 527 to 326\r\n","import React, { useEffect } from \"react\";\r\nimport \"../../styles/scss/blog.scss\";\r\nimport \"../../styles/app.css\";\r\nimport kungfoo from \"../../assets/images/kung-foo.jpg\";\r\nimport Footer from \"../../components/common/footer\";\r\n\r\nconst IKnowKungFoo = () => {\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src =\r\n      \"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?lang=js&amp;skin=desert\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n  }, []);\r\n  return (\r\n    <section className=\"flex flex-col items-center pt-32 min-h-screen\">\r\n      <div className=\"w-full md:w-700 px-8\">\r\n        <h1 className=\"self-center text-5xl font-bold mb-2\">I Know Kung Foo</h1>\r\n        <h2 className=\"italic text-red-400\">March 5th, 2021</h2>\r\n        <div className=\"flex flex-col items-center pt-8\">\r\n          <img src={kungfoo} alt=\"Application\"></img>\r\n        </div>\r\n        <p className=\"text-xl my-8 leading-10 mt-12\">\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus eum\r\n          voluptatem commodi. Assumenda voluptatum autem explicabo, cupiditate\r\n          nemo esse ex rem voluptates beatae ullam qui magni dignissimos totam\r\n          eius enim est illum numquam repellat molestiae doloremque alias\r\n          sapiente obcaecati? Alias laboriosam cupiditate sint mollitia aliquam?\r\n          Qui ipsa inventore ex reiciendis.\r\n        </p>\r\n        <p className=\"text-xl my-8 leading-10\">\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Iste vitae\r\n          deleniti nemo corporis magnam provident voluptas aspernatur laborum\r\n          veniam maxime mollitia harum pariatur sint, doloribus blanditiis,\r\n          libero et voluptate. Consequatur corporis delectus amet, sint odio\r\n          consequuntur quia quo exercitationem esse totam pariatur neque iusto\r\n          eum unde harum aspernatur distinctio non.\r\n        </p>\r\n        <p className=\"text-xl my-8 leading-10\">\r\n          Fast-forward to 2021, and\r\n          <a href=\"https://neuralink.com/\" className=\"text-red-400\">\r\n            {\" \"}\r\n            we're getting closer to making that a reality.\r\n          </a>{\" \"}\r\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eos quis\r\n          deleniti illum est optio voluptas eius explicabo nisi dolorum tempore\r\n          ipsa, deserunt quod quo, magnam consectetur adipisci veniam eum. Sint,\r\n          possimus incidunt. Repudiandae, nostrum aliquam. Inventore in culpa\r\n          quibusdam esse a excepturi quasi, rerum eum at, fugiat quas eligendi\r\n          autem quidem dolores porro dignissimos ipsa impedit fugit cumque.\r\n          Esse, vero?\r\n        </p>\r\n        <p className=\"text-xl my-8 leading-10\">\r\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sint ipsum\r\n          magnam minima illum. In id nemo earum quis culpa dolor minima quia.\r\n          Esse laboriosam accusantium quisquam eveniet dolorum exercitationem\r\n          officiis illum, ab consectetur non. Minus minima nihil magni, debitis\r\n          iure aliquid itaque eligendi ratione ab beatae porro ducimus fuga\r\n          dolores.\r\n        </p>\r\n        <div className=\"flex flex-col items-center\">\r\n          <pre className=\"w-full text-sm prettyprint text-red-400 bg-gray-900 leading-10 rounded-lg overflow-auto\">\r\n            {`\r\n    function life() {\r\n        let chance = Math.floor(Math.random() * 10) + 1;\r\n        if ( chance > 5 ) {\r\n          return console.log (\"You live!\") \r\n        } else {\r\n          return console.log (\"You die!\")\r\n        }\r\n    }\r\n              `}\r\n          </pre>\r\n        </div>\r\n        <p className=\"text-xl my-8 leading-10\">\r\n          Lorem ipsum dolor sit amet consectetur, adipisicing elit.\r\n          Consequuntur, cum soluta nostrum sequi neque laborum esse ad libero\r\n          placeat aliquam hic nesciunt omnis assumenda ab autem aliquid nulla\r\n          eveniet unde itaque repellendus vel iste reprehenderit? Perspiciatis\r\n          eum vero eaque fugit, quidem reiciendis iste, harum nobis error soluta\r\n          totam odio assumenda voluptatum ullam qui. Dolorem quos esse suscipit\r\n          aut excepturi aliquid?\r\n        </p>\r\n        <p className=\"text-xl my-8 leading-10\">\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim\r\n          perspiciatis rem odio ad delectus, dolore repellat dolores autem\r\n          exercitationem facilis reiciendis ratione, debitis eligendi doloremque\r\n          mollitia pariatur dignissimos doloribus. Libero ut eligendi facere\r\n          odit eos eaque labore tenetur fugit vel soluta id nostrum quis,\r\n          tempore cum deleniti! Vel ipsa quos quaerat veniam molestiae quam!\r\n          Iusto numquam adipisci ea nesciunt quaerat minus non aperiam, in ipsum\r\n          ullam, praesentium harum illum veniam! Lorem ipsum dolor sit amet\r\n          consectetur adipisicing elit. Voluptatem nihil facere maxime\r\n          distinctio impedit, officiis dolor excepturi ab placeat ad!\r\n        </p>\r\n      </div>\r\n      <Footer></Footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default IKnowKungFoo;\r\n","import React, { useEffect } from \"react\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport \"../../styles/scss/blog.scss\";\r\nimport \"../../styles/app.css\";\r\nimport Footer from \"../../components/common/footer\";\r\n\r\nconst ReadySetGo = () => {\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src =\r\n      \"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js?lang=bsh&amp;skin=desert\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"flex flex-col items-center font-base leading-7 md:leading-8 text-base md:text-lg pt-32 min-h-screen\">\r\n      <div className=\"w-full md:w-700 space-y-4 px-8 pb-16\">\r\n        {/* Title */}\r\n        <h1 id=\"top\" className=\"self-center text-2xl md:text-5xl font-bold\">\r\n          Ready Set Go\r\n        </h1>\r\n        <p className=\"italic text-red-400\">June 8th, 2022</p>\r\n        <div className=\"border-b border-red-400\"></div>\r\n        {/* Headline */}\r\n        <p className=\"md:text-xl leading-7 md:leading-8 mt-12 italic\">\r\n          So, you've dabbled with\r\n          <span>\r\n            <a\r\n              href=\"https://create-react-app.dev/docs/getting-started\"\r\n              className=\"px-1 text-red-400 hover:text-red-300\"\r\n            >\r\n              create-react-app\r\n            </a>\r\n          </span>\r\n          and you're ready to build and share something amazing with the world.\r\n          Now what? This post will walk you through creating a GitHub repository\r\n          to manage and back up your application as well as using GitHub Pages\r\n          to publish your app to the web.\r\n        </p>\r\n        <div className=\"block border-b border-red-400\"></div>\r\n        {/* Table of Contents */}\r\n        <h2 className=\"text-xl md:text-3xl font-semibold pt-2\">\r\n          Table of Contents\r\n        </h2>\r\n        <ol className=\"list-decimal pb-2 pl-8 space-y-2 md:text-xl font-medium\">\r\n          <li>\r\n            <HashLink\r\n              className=\"text-red-400 hover:text-red-300\"\r\n              scroll={(el) =>\r\n                el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n              }\r\n              to=\"/Solving_The_Syndrome/blog/ready-set-go#register\"\r\n            >\r\n              Create a GitHub Account\r\n            </HashLink>\r\n          </li>\r\n          <li>\r\n            <HashLink\r\n              className=\"text-red-400 hover:text-red-300\"\r\n              scroll={(el) =>\r\n                el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n              }\r\n              to=\"/Solving_The_Syndrome/blog/ready-set-go#create\"\r\n            >\r\n              Create a GitHub Repository\r\n            </HashLink>\r\n          </li>\r\n          <li>\r\n            <HashLink\r\n              className=\"text-red-400 hover:text-red-300\"\r\n              scroll={(el) =>\r\n                el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n              }\r\n              to=\"/Solving_The_Syndrome/blog/ready-set-go#clone\"\r\n            >\r\n              Clone Your GitHub Repository\r\n            </HashLink>\r\n          </li>\r\n          <li>\r\n            <HashLink\r\n              className=\"text-red-400 hover:text-red-300\"\r\n              scroll={(el) =>\r\n                el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n              }\r\n              to=\"/Solving_The_Syndrome/blog/ready-set-go#push\"\r\n            >\r\n              Push Your Code to GitHub\r\n            </HashLink>\r\n          </li>\r\n          <li>\r\n            <HashLink\r\n              className=\"text-red-400 hover:text-red-300\"\r\n              scroll={(el) =>\r\n                el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n              }\r\n              to=\"/Solving_The_Syndrome/blog/ready-set-go#build\"\r\n            >\r\n              Create a Production Build\r\n            </HashLink>\r\n          </li>\r\n          <li>\r\n            {\" \"}\r\n            <HashLink\r\n              className=\"text-red-400 hover:text-red-300\"\r\n              scroll={(el) =>\r\n                el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n              }\r\n              to=\"/Solving_The_Syndrome/blog/ready-set-go#publish\"\r\n            >\r\n              Publish Your App to GitHub Pages\r\n            </HashLink>\r\n          </li>\r\n          <li>\r\n            {\" \"}\r\n            <HashLink\r\n              className=\"text-red-400 hover:text-red-300\"\r\n              scroll={(el) =>\r\n                el.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n              }\r\n              to=\"/Solving_The_Syndrome/blog/ready-set-go#deploy\"\r\n            >\r\n              Deploy Your Build to GitHub Pages\r\n            </HashLink>\r\n          </li>\r\n        </ol>\r\n        <div className=\"border-b border-red-400\"></div>\r\n        {/* Create a GitHub Account */}\r\n        <div className=\"flex items-center justify-start\">\r\n          <h2 id=\"register\" className=\"text-xl md:text-3xl pt-4 font-semibold\">\r\n            Create a GitHub Account\r\n            <span>\r\n              <HashLink smooth to=\"#top\">\r\n                <span className=\"text-xl md:text-3xl pl-2 text-red-400 hover:text-red-300\">\r\n                  #\r\n                </span>\r\n              </HashLink>\r\n            </span>\r\n          </h2>\r\n        </div>\r\n        <p>\r\n          You need a place to store your code and GitHub is pretty much the\r\n          defacto code repository on the web. You'll use the git version control\r\n          system to manage your code repositories—repositories which you'll\r\n          store in GitHub. Let's sign up at{\"\"}\r\n          <span className=\"px-1 text-red-400 hover:text-red-300\">\r\n            <a href=\"https://github.com/signup\">GitHub Signup</a>\r\n          </span>\r\n          and follow the steps to set up an account.\r\n        </p>\r\n        {/* Create a GitHub Repository */}\r\n        <div className=\"flex items-center justify-start\">\r\n          <h2 id=\"create\" className=\"text-xl md:text-3xl pt-4 font-semibold\">\r\n            Create a GitHub Repository\r\n            <HashLink smooth to=\"#top\">\r\n              <span className=\"text-xl md:text-3xl pl-2 text-red-400\">#</span>\r\n            </HashLink>\r\n          </h2>\r\n        </div>\r\n        <p>\r\n          Let's create our first GitHub repository! There should be a green\r\n          button on your GitHub homepage labeled \"New\". Click it to create a new\r\n          repository or\r\n          <span className=\"px-1 text-red-400 hover:text-red-300\">\r\n            <a href=\"https://github.com/new\">click here</a>\r\n          </span>\r\n          to save a few keyboard strokes. Give your repository a name and set it\r\n          to \"public\". No need to bother with any of the other settings for now.\r\n        </p>\r\n        {/* Clone Your GitHub Repository */}\r\n        <div className=\"flex items-center justify-start\">\r\n          <h2 id=\"clone\" className=\"text-xl md:text-3xl pt-4 font-semibold\">\r\n            Clone Your GitHub Repository\r\n            <HashLink smooth to=\"#top\">\r\n              <span className=\"text-xl md:text-3xl pl-2 text-red-400\">#</span>\r\n            </HashLink>\r\n          </h2>\r\n        </div>\r\n        <p>\r\n          You'll want to save your app to your computer and sync it to GitHub.\r\n          So, we'll create a folder for our app and we'll clone our GitHub\r\n          repository to the same folder.\r\n        </p>\r\n        <p>\r\n          To clone your repository, go to your repository on GitHub and, on the\r\n          \"Code\" page there's a green \"Code\" button. Clicking it will present a\r\n          dropdown menu with a \"copy to clipboard\" button for your repository's\r\n          GitHub URL. We'll use this URL, along with the \"git clone\" command, to\r\n          clone our repository locally so we can develop our changes locally\r\n          using all of the wonderful capabilities provided by a version control\r\n          system known as git. To learn more about git, check out their{\" \"}\r\n          <span className=\"px-1 text-red-400 hover:text-red-300\">\r\n            <a href=\"https://git-scm.com/\">documentation.</a>\r\n          </span>\r\n        </p>\r\n        <pre className=\"pt-24 text-xs md:text-lg prettyprint text-red-400 bg-gray-700 leading-8 rounded-2xl overflow-auto mr-auto\">\r\n          {`\r\n    ## Create and access a directory for your app\r\n    mkdir my_app\r\n    cd my_app\r\n    ## Clone your repository\r\n    git clone <your-git-repository>\r\n          `}\r\n        </pre>\r\n        {/* Push Your Code to GitHub */}\r\n        <div className=\"flex items-center justify-start\">\r\n          <h2 id=\"push\" className=\"text-xl md:text-3xl pt-4 font-semibold\">\r\n            Push Your Code to GitHub\r\n            <HashLink smooth to=\"#top\">\r\n              <span className=\"text-xl md:text-3xl pl-2 text-red-400\">#</span>\r\n            </HashLink>\r\n          </h2>\r\n        </div>\r\n        <p>\r\n          Refer to the{\" \"}\r\n          <a\r\n            href=\"https://create-react-app.dev/docs/getting-started\"\r\n            className=\"text-red-400 hover:text-red-300\"\r\n          >\r\n            Create React App\r\n          </a>{\" \"}\r\n          tutorial for creating your new React app. Make sure you're still in\r\n          your \"my_app\" directory when creating your new React application. Once\r\n          you're ready to save your changes, save them locally and then push\r\n          your code to GitHub. See below for example code you can use to stage,\r\n          commit, and push your changes to GitHub.\r\n        </p>\r\n        <pre className=\"text-xs md:text-lg prettyprint text-red-400 bg-gray-700 leading-8 rounded-2xl overflow-auto mr-auto\">\r\n          {`\r\n  # Stage all of your changes\r\n  git add --all\r\n  # Commit all of your changes and add a message\"\r\n  git commit -m \"my_app - initial commit\"\r\n  # Push your code!\r\n  git push\r\n          `}\r\n        </pre>\r\n        {/* Create a Production Build */}\r\n        <div className=\"flex items-center justify-start\">\r\n          <h2 id=\"build\" className=\"text-xl md:text-3xl pt-4 font-semibold\">\r\n            Create a Production Build\r\n            <HashLink smooth to=\"#top\">\r\n              <span className=\"text-xl md:text-3xl pl-2 text-red-400\">#</span>\r\n            </HashLink>\r\n          </h2>\r\n        </div>\r\n        <p>\r\n          The production build is an web optimized version of our app. This is\r\n          the version we'll post to GitHub Pages. Production builds improve load\r\n          time which makes for happier users. So run that build and get ready to\r\n          deploy your app.\r\n        </p>\r\n        <pre className=\"text-xs md:text-lg prettyprint text-red-400 bg-gray-700 leading-8 rounded-2xl overflow-auto mr-auto\">\r\n          {`\r\n  # Create your product build\r\n  npm run build\r\n          `}\r\n        </pre>\r\n        {/* Publish Your App to GitHub Pages */}\r\n        <div className=\"flex items-center justify-start\">\r\n          <h2 id=\"publish\" className=\"text-xl md:text-3xl pt-4 font-semibold\">\r\n            Publish Your App to GitHub Pages\r\n            <HashLink smooth to=\"#top\">\r\n              <span className=\"text-xl md:text-3xl pl-2 text-red-400\">#</span>\r\n            </HashLink>\r\n          </h2>\r\n        </div>\r\n        <p>\r\n          For a more in-depth understanding of GitHub Pages,{\" \"}\r\n          <span className=\"px-1 text-red-400 hover:text-red-300\">\r\n            <a href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site\">\r\n              please read the documentation,\r\n            </a>\r\n          </span>\r\n          but if you're looking for the TL;DR, then you should know that\r\n          deploying your application from a GitHub repository to GitHub Pages\r\n          is, as you should expect, very easy. Simply go to \"Settings\" and\r\n          \"Pages\" page, select \"Deploy from a branch\" as your \"Source\" and pick\r\n          a branch from the \"Branch\" dropdown which will be used to build your\r\n          application.\r\n        </p>\r\n        {/* Deploy Your Build to GitHub Pages */}\r\n        <div className=\"flex items-center justify-start\">\r\n          <h2 id=\"deploy\" className=\"text-xl md:text-3xl pt-4 font-semibold\">\r\n            Deploy Your Build to GitHub Pages\r\n            <HashLink smooth to=\"#top\">\r\n              <span className=\"text-xl md:text-3xl pl-2 text-red-400\">#</span>\r\n            </HashLink>\r\n          </h2>\r\n        </div>\r\n        <p>\r\n          From here on out, to deploy your changes to GitHub Pages, just follow\r\n          the previous steps (i.e., stage, commit, push, build) and if you'd\r\n          like to publish updates to your GitHub Pages page from the comfort of\r\n          your terminal, just install the NPM package called\r\n          <span className=\"px-1 text-red-400 hover:text-red-300\">\r\n            <a href=\"https://www.npmjs.com/package/gh-pages#command-line-utility\">\r\n              gh-pages\r\n            </a>\r\n          </span>\r\n          and set up a package.json \"deploy\" script to push your code to your\r\n          GitHub Pages page as is illustrated below. Godspeed!\r\n        </p>\r\n        <pre className=\"text-xs md:text-lg prettyprint text-red-400 bg-gray-700 leading-8 rounded-2xl overflow-auto mr-auto\">\r\n          {`\r\n      # Deploy your build to gh-pages\r\n      npm run deploy\r\n      😎\r\n          `}\r\n        </pre>\r\n      </div>\r\n      <Footer></Footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ReadySetGo;\r\n","import Navbar from \"./components/navbar/Navbar\";\r\nimport Home from \"./pages/blog/home\";\r\nimport About from \"./pages/blog/about\";\r\nimport Blog from \"./pages/blog/blog\";\r\nimport DarkMode from \"./pages/blog/dark-mode\";\r\nimport IKnowKungFoo from \"./pages/blog/i-know-kung-fu\";\r\nimport FigmaSlider from \"./pages/blog/figma-slider\";\r\nimport ReactComponents from \"./pages/blog/react-components\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport \"./styles/scss/base.scss\";\r\nimport \"./styles/app.css\";\r\nimport ReadySetGo from \"./pages/blog/ready-set-go\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    // Added to manually test...\r\n    localStorage.setItem(\"theme\", \"dark\");\r\n    console.log(\"Howdy!\");\r\n    // If the user has selected a theme, use that\r\n    const selectedTheme = localStorage.getItem(\"theme\");\r\n\r\n    if (selectedTheme) {\r\n      document.body.classList.remove(\"light\");\r\n      document.body.classList.remove(\"dark\");\r\n      document.body.classList.add(selectedTheme);\r\n      // Else, if the user's OS preference is Dark Mode...\r\n    } else if (window.matchMedia(\"(prefers-color-scheme: dark)\")) {\r\n      document.body.classList.remove(\"light\");\r\n      document.body.classList.add(\"dark\");\r\n    } else {\r\n      document.body.classList.remove(\"dark\");\r\n      document.body.classList.add(\"light\");\r\n    }\r\n  }, []);\r\n  return (\r\n    <Router>\r\n      <div className=\"relative h-full bg-background text-copy-primary\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" exact={true} component={Blog} />\r\n          <Route path=\"/Solving_The_Syndrome\" exact={true} component={Blog} />\r\n          <Route\r\n            path=\"/Solving_The_Syndrome/home\"\r\n            exact={true}\r\n            className=\"home\"\r\n            component={Home}\r\n          />\r\n          {/* <Route\r\n              path=\"/login\"\r\n              exact={true}\r\n              className=\"login\"\r\n              component={Login}\r\n            /> */}\r\n          <Route\r\n            path=\"/Solving_The_Syndrome/blog\"\r\n            exact={true}\r\n            className=\"blog\"\r\n            component={Blog}\r\n          />\r\n          <Route\r\n            path=\"/Solving_The_Syndrome/blog/figma-slider\"\r\n            exact={true}\r\n            className=\"figma-slider\"\r\n            component={FigmaSlider}\r\n          />\r\n          <Route\r\n            path=\"/Solving_The_Syndrome/blog/react-components\"\r\n            exact={true}\r\n            className=\"react-components\"\r\n            component={ReactComponents}\r\n          />\r\n          <Route\r\n            path=\"/Solving_The_Syndrome/blog/dark-mode\"\r\n            exact={true}\r\n            className=\"dark-mode-blog\"\r\n            component={DarkMode}\r\n          />\r\n          <Route\r\n            path=\"/Solving_The_Syndrome/blog/i-know-kung-fu\"\r\n            exact={true}\r\n            className=\"i-know-kung-fu\"\r\n            component={IKnowKungFoo}\r\n          />\r\n          <Route\r\n            path=\"/Solving_The_Syndrome/blog/ready-set-go\"\r\n            exact={true}\r\n            className=\"ready-set-go\"\r\n            component={ReadySetGo}\r\n          />\r\n          <Route\r\n            path=\"/Solving_The_Syndrome/about\"\r\n            exact={true}\r\n            className=\"about\"\r\n            component={About}\r\n          />\r\n          <Redirect from=\"*\" to=\"/404\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export default __webpack_public_path__ + \"static/media/kung-foo.6fad6739.jpg\";","export default __webpack_public_path__ + \"static/media/constraints_full.4dd11acc.png\";","export default __webpack_public_path__ + \"static/media/constraints_half.d44f5db5.png\";","export default __webpack_public_path__ + \"static/media/constraints_zero.aa65ef50.png\";","export default __webpack_public_path__ + \"static/media/interactions.00be2766.png\";","export default __webpack_public_path__ + \"static/media/slider.6b796adf.png\";","export default __webpack_public_path__ + \"static/media/slider_bar.07978ec1.png\";","export default __webpack_public_path__ + \"static/media/slider_handle.04e225c7.png\";","var map = {\n\t\"./banana.jpg\": 104,\n\t\"./code.jpg\": 105,\n\t\"./constraints.png\": 106,\n\t\"./constraints_full.png\": 66,\n\t\"./constraints_half.png\": 67,\n\t\"./constraints_zero.png\": 68,\n\t\"./graph.jpg\": 107,\n\t\"./grid.jpg\": 108,\n\t\"./interactions.png\": 69,\n\t\"./kung-foo.jpg\": 47,\n\t\"./money.jpg\": 109,\n\t\"./neuron.jpg\": 110,\n\t\"./programmer.jpg\": 111,\n\t\"./slider.png\": 70,\n\t\"./slider_bar.png\": 71,\n\t\"./slider_handle.png\": 72,\n\t\"./slider_mov.gif\": 112,\n\t\"./tired.jpg\": 113\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 79;"],"sourceRoot":""}